{"version":3,"file":"ngx-soap.umd.js","sources":["../src/libts/utils.js","../src/libts/wsdl.js","../src/libts/soap.js","../src/libts/nscontext.js","../src/libts/client.js","../src/soap.service.js","../src/ngx-soap.module.js","../src/libts/security/basic-auth-security.js"],"sourcesContent":["// import * as crypto from '                     crypto-js/sha1';\n// import * as buffer from \"buffer/\";\n// export function passwordDigest(nonce, created, password) {\n//   // digest = base64 ( sha1 ( nonce + created + password ) )\n//   var pwHash = crypto.createHash('sha1');\n//   var rawNonce = buffer.Buffer(nonce || '', 'base64').toString('binary');\n//   pwHash.update(rawNonce + created + password);\n//   return pwHash.digest('base64');\n// };\n// import * as crypto from '                     crypto-js/sha1';\nexport var TNS_PREFIX = '__tns__'; // Prefix for targetNamespace\n/**\n * Find a key from an object based on the value\n * @param {Object} Namespace prefix/uri mapping\n * @param {*} nsURI value\n * @returns {String} The matching key\n */\n// Prefix for targetNamespace\nexport function findPrefix(xmlnsMapping, nsURI) {\n    for (var n in xmlnsMapping) {\n        if (n === TNS_PREFIX)\n            continue;\n        if (xmlnsMapping[n] === nsURI) {\n            return n;\n        }\n    }\n}\n;\n//# sourceMappingURL=utils.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as _ from 'lodash';\nimport * as sax from 'sax';\nimport { TNS_PREFIX, findPrefix } from './utils';\nimport { NamespaceContext } from \"./nscontext\";\nvar stripBom = function (x) {\n    // Catches EFBBBF (UTF-8 BOM) because the buffer-to-string\n    // conversion translates it to FEFF (UTF-16 BOM)\n    if (x.charCodeAt(0) === 0xFEFF) {\n        return x.slice(1);\n    }\n    return x;\n};\nvar Primitives = {\n    string: 1,\n    boolean: 1,\n    decimal: 1,\n    float: 1,\n    double: 1,\n    anyType: 1,\n    byte: 1,\n    int: 1,\n    long: 1,\n    short: 1,\n    negativeInteger: 1,\n    nonNegativeInteger: 1,\n    positiveInteger: 1,\n    nonPositiveInteger: 1,\n    unsignedByte: 1,\n    unsignedInt: 1,\n    unsignedLong: 1,\n    unsignedShort: 1,\n    duration: 0,\n    dateTime: 0,\n    time: 0,\n    date: 0,\n    gYearMonth: 0,\n    gYear: 0,\n    gMonthDay: 0,\n    gDay: 0,\n    gMonth: 0,\n    hexBinary: 0,\n    base64Binary: 0,\n    anyURI: 0,\n    QName: 0,\n    NOTATION: 0\n};\nvar trimLeft = /^[\\s\\xA0]+/;\nvar trimRight = /[\\s\\xA0]+$/;\nfunction appendColon(ns) {\n    return (ns && ns.charAt(ns.length - 1) !== ':') ? ns + ':' : ns;\n}\nfunction noColonNameSpace(ns) {\n    return (ns && ns.charAt(ns.length - 1) === ':') ? ns.substring(0, ns.length - 1) : ns;\n}\nfunction splitQName(nsName) {\n    if (typeof nsName !== 'string')\n        return {\n            prefix: '',\n            name: nsName\n        };\n    var i = nsName.indexOf(':');\n    return i < 0 ? { prefix: TNS_PREFIX, name: nsName } :\n        { prefix: nsName.substring(0, i), name: nsName.substring(i + 1) };\n}\nfunction xmlEscape(obj) {\n    if (typeof (obj) === 'string') {\n        if (obj.substr(0, 9) === '<![CDATA[' && obj.substr(-3) === \"]]>\") {\n            return obj;\n        }\n        return obj\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&apos;');\n    }\n    return obj;\n}\nfunction trim(text) {\n    return text.replace(trimLeft, '').replace(trimRight, '');\n}\nfunction deepMerge(destination, source) {\n    return _.merge(destination || {}, source, function (a, b) {\n        return _.isArray(a) ? a.concat(b) : undefined;\n    });\n}\nexport function openWsdl(wsdlDef, options) {\n    if (options === void 0) { options = {}; }\n    return new Promise(function (resolve, reject) {\n        var wsdl = new WSDL(wsdlDef, options);\n        resolve(wsdl.build());\n    });\n}\nvar WSDL = (function () {\n    function WSDL(definition, options) {\n        this.options = {};\n        // uri: any;\n        this.ignoredNamespaces = ['tns', 'targetNamespace', 'typedNamespace'];\n        this.ignoreBaseNameSpaces = false;\n        this.valueKey = '$value';\n        this.xmlKey = '$xml';\n        this.describeServices = function () {\n            var services = {};\n            for (var name in this.services) {\n                var service = this.services[name];\n                services[name] = service.description(this.definitions);\n            }\n            return services;\n        };\n        /**\n       * Look up a XSD type or element by namespace URI and name\n       * @param {String} nsURI Namespace URI\n       * @param {String} qname Local or qualified name\n       * @returns {*} The XSD type/element definition\n       */\n        this.findSchemaObject = function (nsURI, qname) {\n            if (!nsURI || !qname) {\n                return null;\n            }\n            var def = null;\n            if (this.definitions.schemas) {\n                var schema = this.definitions.schemas[nsURI];\n                if (schema) {\n                    if (qname.indexOf(':') !== -1) {\n                        qname = qname.substring(qname.indexOf(':') + 1, qname.length);\n                    }\n                    // if the client passed an input element which has a `$lookupType` property instead of `$type`\n                    // the `def` is found in `schema.elements`.\n                    def = schema.complexTypes[qname] || schema.types[qname] || schema.elements[qname];\n                }\n            }\n            return def;\n        };\n        this.definition = definition;\n        // this.uri = uri;\n        this._includesWsdl = [];\n        this._initializeOptions(options);\n    }\n    WSDL.prototype.build = function () {\n        var _this = this;\n        return this._fromXML(stripBom(this.definition))\n            .then(function () { return _this.processIncludes(); })\n            .then(function (definitions) {\n            var name;\n            _this.definitions = definitions;\n            _this.definitions.deleteFixedAttrs();\n            var services = _this.services = _this.definitions.services;\n            if (services) {\n                for (name in services) {\n                    services[name].postProcess(_this.definitions);\n                }\n            }\n            var complexTypes = _this.definitions.complexTypes;\n            if (complexTypes) {\n                for (name in complexTypes) {\n                    complexTypes[name].deleteFixedAttrs();\n                }\n            }\n            // for document style, for every binding, prepare input message element name to (methodName, output message element name) mapping\n            var bindings = _this.definitions.bindings;\n            for (var bindingName in bindings) {\n                var binding = bindings[bindingName];\n                if (typeof binding.style === 'undefined') {\n                    binding.style = 'document';\n                }\n                if (binding.style !== 'document')\n                    continue;\n                var methods = binding.methods;\n                var topEls = binding.topElements = {};\n                for (var methodName in methods) {\n                    if (methods[methodName].input) {\n                        var inputName = methods[methodName].input.$name;\n                        var outputName = \"\";\n                        if (methods[methodName].output)\n                            outputName = methods[methodName].output.$name;\n                        topEls[inputName] = { \"methodName\": methodName, \"outputName\": outputName };\n                    }\n                }\n            }\n            _this.xmlnsInEnvelope = _this._xmlnsMap();\n            return _this;\n        })\n            .catch(function (err) { return console.log(\"Build error\", err); });\n    };\n    WSDL.prototype.processIncludes = function () {\n        var schemas = this.definitions.schemas;\n        var includes = [];\n        for (var ns in schemas) {\n            var schema = schemas[ns];\n            includes = includes.concat(schema.includes || []);\n        }\n        return this._processNextInclude(includes);\n    };\n    WSDL.prototype.toXML = function () {\n        return this.xml || '';\n    };\n    WSDL.prototype.objectToXML = function (obj, name, nsPrefix, nsURI, isFirst, xmlnsAttr, schemaObject, nsContext) {\n        if (isFirst === void 0) { isFirst = {}; }\n        if (xmlnsAttr === void 0) { xmlnsAttr = {}; }\n        var self = this;\n        var schema = this.definitions.schemas[nsURI];\n        var parentNsPrefix = nsPrefix ? nsPrefix.parent : undefined;\n        if (typeof parentNsPrefix !== 'undefined') {\n            //we got the parentNsPrefix for our array. setting the namespace-variable back to the current namespace string\n            nsPrefix = nsPrefix.current;\n        }\n        parentNsPrefix = noColonNameSpace(parentNsPrefix);\n        if (this.isIgnoredNameSpace(parentNsPrefix)) {\n            parentNsPrefix = '';\n        }\n        var soapHeader = !schema;\n        var qualified = schema && schema.$elementFormDefault === 'qualified';\n        var parts = [];\n        var prefixNamespace = (nsPrefix || qualified) && nsPrefix !== TNS_PREFIX;\n        var xmlnsAttrib = '';\n        if (nsURI && isFirst) {\n            if (self.options.overrideRootElement && self.options.overrideRootElement.xmlnsAttributes) {\n                self.options.overrideRootElement.xmlnsAttributes.forEach(function (attribute) {\n                    xmlnsAttrib += ' ' + attribute.name + '=\"' + attribute.value + '\"';\n                });\n            }\n            else {\n                if (prefixNamespace && !this.isIgnoredNameSpace(nsPrefix)) {\n                    // resolve the prefix namespace\n                    xmlnsAttrib += ' xmlns:' + nsPrefix + '=\"' + nsURI + '\"';\n                }\n                // only add default namespace if the schema elementFormDefault is qualified\n                if (qualified || soapHeader)\n                    xmlnsAttrib += ' xmlns=\"' + nsURI + '\"';\n            }\n        }\n        if (!nsContext) {\n            nsContext = new NamespaceContext();\n            nsContext.declareNamespace(nsPrefix, nsURI);\n        }\n        else {\n            nsContext.pushContext();\n        }\n        // explicitly use xmlns attribute if available\n        if (xmlnsAttr && !(self.options.overrideRootElement && self.options.overrideRootElement.xmlnsAttributes)) {\n            xmlnsAttrib = xmlnsAttr;\n        }\n        var ns = '';\n        if (self.options.overrideRootElement && isFirst) {\n            ns = self.options.overrideRootElement.namespace;\n        }\n        else if (prefixNamespace && (qualified || isFirst || soapHeader) && !this.isIgnoredNameSpace(nsPrefix)) {\n            ns = nsPrefix;\n        }\n        var i, n;\n        // start building out XML string.\n        if (Array.isArray(obj)) {\n            for (i = 0, n = obj.length; i < n; i++) {\n                var item = obj[i];\n                var arrayAttr = self.processAttributes(item, nsContext), correctOuterNsPrefix = parentNsPrefix || ns; //using the parent namespace prefix if given\n                parts.push(['<', appendColon(correctOuterNsPrefix), name, arrayAttr, xmlnsAttrib, '>'].join(''));\n                parts.push(self.objectToXML(item, name, nsPrefix, nsURI, false, null, schemaObject, nsContext));\n                parts.push(['</', appendColon(correctOuterNsPrefix), name, '>'].join(''));\n            }\n        }\n        else if (typeof obj === 'object') {\n            for (name in obj) {\n                if (!obj.hasOwnProperty(name))\n                    continue;\n                //don't process attributes as element\n                if (name === self.options.attributesKey) {\n                    continue;\n                }\n                //Its the value of a xml object. Return it directly.\n                if (name === self.options.xmlKey) {\n                    nsContext.popContext();\n                    return obj[name];\n                }\n                //Its the value of an item. Return it directly.\n                if (name === self.options.valueKey) {\n                    nsContext.popContext();\n                    return xmlEscape(obj[name]);\n                }\n                var child = obj[name];\n                if (typeof child === 'undefined') {\n                    continue;\n                }\n                var attr = self.processAttributes(child, nsContext);\n                var value = '';\n                var nonSubNameSpace = '';\n                var emptyNonSubNameSpace = false;\n                var nameWithNsRegex = /^([^:]+):([^:]+)$/.exec(name);\n                if (nameWithNsRegex) {\n                    nonSubNameSpace = nameWithNsRegex[1] + ':';\n                    name = nameWithNsRegex[2];\n                }\n                else if (name[0] === ':') {\n                    emptyNonSubNameSpace = true;\n                    name = name.substr(1);\n                }\n                if (isFirst) {\n                    value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, schemaObject, nsContext);\n                }\n                else {\n                    if (self.definitions.schemas) {\n                        if (schema) {\n                            var childSchemaObject = self.findChildSchemaObject(schemaObject, name);\n                            //find sub namespace if not a primitive\n                            if (childSchemaObject &&\n                                ((childSchemaObject.$type && (childSchemaObject.$type.indexOf('xsd:') === -1)) ||\n                                    childSchemaObject.$ref || childSchemaObject.$name)) {\n                                /*if the base name space of the children is not in the ingoredSchemaNamspaces we use it.\n                                 This is because in some services the child nodes do not need the baseNameSpace.\n                                 */\n                                var childNsPrefix = '';\n                                var childName = '';\n                                var childNsURI;\n                                var childXmlnsAttrib = '';\n                                var elementQName = childSchemaObject.$ref || childSchemaObject.$name;\n                                if (elementQName) {\n                                    elementQName = splitQName(elementQName);\n                                    childName = elementQName.name;\n                                    if (elementQName.prefix === TNS_PREFIX) {\n                                        // Local element\n                                        childNsURI = childSchemaObject.$targetNamespace;\n                                        childNsPrefix = nsContext.registerNamespace(childNsURI);\n                                        if (this.isIgnoredNameSpace(childNsPrefix)) {\n                                            childNsPrefix = nsPrefix;\n                                        }\n                                    }\n                                    else {\n                                        childNsPrefix = elementQName.prefix;\n                                        if (this.isIgnoredNameSpace(childNsPrefix)) {\n                                            childNsPrefix = nsPrefix;\n                                        }\n                                        childNsURI = schema.xmlns[childNsPrefix] || self.definitions.xmlns[childNsPrefix];\n                                    }\n                                    var unqualified = false;\n                                    // Check qualification form for local elements\n                                    if (childSchemaObject.$name && childSchemaObject.targetNamespace === undefined) {\n                                        if (childSchemaObject.$form === 'unqualified') {\n                                            unqualified = true;\n                                        }\n                                        else if (childSchemaObject.$form === 'qualified') {\n                                            unqualified = false;\n                                        }\n                                        else {\n                                            unqualified = schema.$elementFormDefault !== 'qualified';\n                                        }\n                                    }\n                                    if (unqualified) {\n                                        childNsPrefix = '';\n                                    }\n                                    if (childNsURI && childNsPrefix) {\n                                        if (nsContext.declareNamespace(childNsPrefix, childNsURI)) {\n                                            childXmlnsAttrib = ' xmlns:' + childNsPrefix + '=\"' + childNsURI + '\"';\n                                            xmlnsAttrib += childXmlnsAttrib;\n                                        }\n                                    }\n                                }\n                                var resolvedChildSchemaObject;\n                                if (childSchemaObject.$type) {\n                                    var typeQName = splitQName(childSchemaObject.$type);\n                                    var typePrefix = typeQName.prefix;\n                                    var typeURI = schema.xmlns[typePrefix] || self.definitions.xmlns[typePrefix];\n                                    childNsURI = typeURI;\n                                    if (typeURI !== 'http://www.w3.org/2001/XMLSchema' && typePrefix !== TNS_PREFIX) {\n                                        // Add the prefix/namespace mapping, but not declare it\n                                        nsContext.addNamespace(typePrefix, typeURI);\n                                    }\n                                    resolvedChildSchemaObject =\n                                        self.findSchemaType(typeQName.name, typeURI) || childSchemaObject;\n                                }\n                                else {\n                                    resolvedChildSchemaObject =\n                                        self.findSchemaObject(childNsURI, childName) || childSchemaObject;\n                                }\n                                if (childSchemaObject.$baseNameSpace && this.options.ignoreBaseNameSpaces) {\n                                    childNsPrefix = nsPrefix;\n                                    childNsURI = nsURI;\n                                }\n                                if (this.options.ignoreBaseNameSpaces) {\n                                    childNsPrefix = '';\n                                    childNsURI = '';\n                                }\n                                ns = childNsPrefix;\n                                if (Array.isArray(child)) {\n                                    //for arrays, we need to remember the current namespace\n                                    childNsPrefix = {\n                                        current: childNsPrefix,\n                                        parent: ns\n                                    };\n                                }\n                                else {\n                                    //parent (array) already got the namespace\n                                    childXmlnsAttrib = null;\n                                }\n                                value = self.objectToXML(child, name, childNsPrefix, childNsURI, false, childXmlnsAttrib, resolvedChildSchemaObject, nsContext);\n                            }\n                            else if (obj[self.options.attributesKey] && obj[self.options.attributesKey].xsi_type) {\n                                //if parent object has complex type defined and child not found in parent\n                                var completeChildParamTypeObject = self.findChildSchemaObject(obj[self.options.attributesKey].xsi_type.type, obj[self.options.attributesKey].xsi_type.xmlns);\n                                nonSubNameSpace = obj[self.options.attributesKey].xsi_type.prefix;\n                                nsContext.addNamespace(obj[self.options.attributesKey].xsi_type.prefix, obj[self.options.attributesKey].xsi_type.xmlns);\n                                value = self.objectToXML(child, name, obj[self.options.attributesKey].xsi_type.prefix, obj[self.options.attributesKey].xsi_type.xmlns, false, null, null, nsContext);\n                            }\n                            else {\n                                if (Array.isArray(child)) {\n                                    name = nonSubNameSpace + name;\n                                }\n                                value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, null, nsContext);\n                            }\n                        }\n                        else {\n                            value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, null, nsContext);\n                        }\n                    }\n                }\n                ns = noColonNameSpace(ns);\n                if (prefixNamespace && !qualified && isFirst && !self.options.overrideRootElement) {\n                    ns = nsPrefix;\n                }\n                else if (this.isIgnoredNameSpace(ns)) {\n                    ns = '';\n                }\n                if (!Array.isArray(child)) {\n                    // start tag\n                    parts.push(['<', emptyNonSubNameSpace ? '' : appendColon(nonSubNameSpace || ns), name, attr, xmlnsAttrib,\n                        (child === null ? ' xsi:nil=\"true\"' : ''), '>'].join(''));\n                }\n                parts.push(value);\n                if (!Array.isArray(child)) {\n                    // end tag\n                    parts.push(['</', emptyNonSubNameSpace ? '' : appendColon(nonSubNameSpace || ns), name, '>'].join(''));\n                }\n            }\n        }\n        else if (obj !== undefined) {\n            parts.push((self.options.escapeXML) ? xmlEscape(obj) : obj);\n        }\n        nsContext.popContext();\n        return parts.join('');\n    };\n    /**\n   * Create RPC style xml string from the parameters\n   * @param {string} name\n   * @param {*} params\n   * @param {string} nsPrefix\n   * @param {string} nsURI\n   * @param {boolean} isParts\n   * @returns {string}\n   */\n    WSDL.prototype.objectToRpcXML = function (name, params, nsPrefix, nsURI, isParts) {\n        var parts = [];\n        var defs = this.definitions;\n        var nsAttrName = '_xmlns';\n        nsPrefix = nsPrefix || findPrefix(defs.xmlns, nsURI);\n        nsURI = nsURI || defs.xmlns[nsPrefix];\n        nsPrefix = nsPrefix === TNS_PREFIX ? '' : (nsPrefix + ':');\n        parts.push(['<', nsPrefix, name, '>'].join(''));\n        for (var key in params) {\n            if (!params.hasOwnProperty(key)) {\n                continue;\n            }\n            if (key !== nsAttrName) {\n                var value = params[key];\n                var prefixedKey = (isParts ? '' : nsPrefix) + key;\n                parts.push(['<', prefixedKey, '>'].join(''));\n                parts.push((typeof value === 'object') ? this.objectToXML(value, key, nsPrefix, nsURI) : xmlEscape(value));\n                parts.push(['</', prefixedKey, '>'].join(''));\n            }\n        }\n        parts.push(['</', nsPrefix, name, '>'].join(''));\n        return parts.join('');\n    };\n    /**\n   * Create document style xml string from the parameters\n   * @param {String} name\n   * @param {*} params\n   * @param {String} nsPrefix\n   * @param {String} nsURI\n   * @param {String} type\n   */\n    WSDL.prototype.objectToDocumentXML = function (name, params, nsPrefix, nsURI, type) {\n        var args = {};\n        args[name] = params;\n        var parameterTypeObj = type ? this.findSchemaObject(nsURI, type) : null;\n        return this.objectToXML(args, null, nsPrefix, nsURI, true, null, parameterTypeObj);\n    };\n    WSDL.prototype.isIgnoredNameSpace = function (ns) {\n        return this.options.ignoredNamespaces.indexOf(ns) > -1;\n    };\n    WSDL.prototype.filterOutIgnoredNameSpace = function (ns) {\n        var namespace = noColonNameSpace(ns);\n        return this.isIgnoredNameSpace(namespace) ? '' : namespace;\n    };\n    WSDL.prototype.processAttributes = function (child, nsContext) {\n        var attr = '';\n        if (child === null) {\n            child = [];\n        }\n        var attrObj = child[this.options.attributesKey];\n        if (attrObj && attrObj.xsi_type) {\n            var xsiType = attrObj.xsi_type;\n            var prefix = xsiType.prefix || xsiType.namespace;\n            // Generate a new namespace for complex extension if one not provided\n            if (!prefix) {\n                prefix = nsContext.registerNamespace(xsiType.xmlns);\n            }\n            else {\n                nsContext.declareNamespace(prefix, xsiType.xmlns);\n            }\n            xsiType.prefix = prefix;\n        }\n        if (attrObj) {\n            for (var attrKey in attrObj) {\n                //handle complex extension separately\n                if (attrKey === 'xsi_type') {\n                    var attrValue = attrObj[attrKey];\n                    attr += ' xsi:type=\"' + attrValue.prefix + ':' + attrValue.type + '\"';\n                    attr += ' xmlns:' + attrValue.prefix + '=\"' + attrValue.xmlns + '\"';\n                    continue;\n                }\n                else {\n                    attr += ' ' + attrKey + '=\"' + xmlEscape(attrObj[attrKey]) + '\"';\n                }\n            }\n        }\n        return attr;\n    };\n    WSDL.prototype.findSchemaType = function (name, nsURI) {\n        if (!this.definitions.schemas || !name || !nsURI) {\n            return null;\n        }\n        var schema = this.definitions.schemas[nsURI];\n        if (!schema || !schema.complexTypes) {\n            return null;\n        }\n        return schema.complexTypes[name];\n    };\n    WSDL.prototype.findChildSchemaObject = function (parameterTypeObj, childName, backtrace) {\n        if (backtrace === void 0) { backtrace = []; }\n        if (!parameterTypeObj || !childName) {\n            return null;\n        }\n        if (!backtrace) {\n            backtrace = [];\n        }\n        if (backtrace.indexOf(parameterTypeObj) >= 0) {\n            // We've recursed back to ourselves; break.\n            return null;\n        }\n        else {\n            backtrace = backtrace.concat([parameterTypeObj]);\n        }\n        var found = null, i = 0, child, ref;\n        if (Array.isArray(parameterTypeObj.$lookupTypes) && parameterTypeObj.$lookupTypes.length) {\n            var types = parameterTypeObj.$lookupTypes;\n            for (i = 0; i < types.length; i++) {\n                var typeObj = types[i];\n                if (typeObj.$name === childName) {\n                    found = typeObj;\n                    break;\n                }\n            }\n        }\n        var object = parameterTypeObj;\n        if (object.$name === childName && object.name === 'element') {\n            return object;\n        }\n        if (object.$ref) {\n            ref = splitQName(object.$ref);\n            if (ref.name === childName) {\n                return object;\n            }\n        }\n        var childNsURI;\n        if (object.$type) {\n            var typeInfo = splitQName(object.$type);\n            if (typeInfo.prefix === TNS_PREFIX) {\n                childNsURI = parameterTypeObj.$targetNamespace;\n            }\n            else {\n                childNsURI = this.definitions.xmlns[typeInfo.prefix];\n            }\n            var typeDef = this.findSchemaType(typeInfo.name, childNsURI);\n            if (typeDef) {\n                return this.findChildSchemaObject(typeDef, childName, backtrace);\n            }\n        }\n        if (object.children) {\n            for (i = 0, child; child = object.children[i]; i++) {\n                found = this.findChildSchemaObject(child, childName, backtrace);\n                if (found) {\n                    break;\n                }\n                if (child.$base) {\n                    var baseQName = splitQName(child.$base);\n                    var childNameSpace = baseQName.prefix === TNS_PREFIX ? '' : baseQName.prefix;\n                    childNsURI = this.definitions.xmlns[baseQName.prefix];\n                    var foundBase = this.findSchemaType(baseQName.name, childNsURI);\n                    if (foundBase) {\n                        found = this.findChildSchemaObject(foundBase, childName, backtrace);\n                        if (found) {\n                            found.$baseNameSpace = childNameSpace;\n                            found.$type = childNameSpace + ':' + childName;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        if (!found && object.$name === childName) {\n            return object;\n        }\n        return found;\n    };\n    WSDL.prototype.xmlToObject = function (xml, callback) {\n        var self = this;\n        // var p = typeof callback === 'function' ? {} : saxParser(true, {});\n        var p = sax.parser(true, {});\n        var objectName = null;\n        var root = {};\n        var schema = {\n            Envelope: {\n                Header: {\n                    Security: {\n                        UsernameToken: {\n                            Username: 'string',\n                            Password: 'string'\n                        }\n                    }\n                },\n                Body: {\n                    Fault: {\n                        faultcode: 'string',\n                        faultstring: 'string',\n                        detail: 'string'\n                    }\n                }\n            }\n        };\n        var stack = [{ name: null, object: root, schema: schema }];\n        var xmlns = {};\n        var refs = {}, id; // {id:{hrefs:[],obj:}, ...}\n        p.onopentag = function (node) {\n            var nsName = node.name;\n            var attrs = node.attributes;\n            var name = splitQName(nsName).name, attributeName, top = stack[stack.length - 1], topSchema = top.schema, elementAttributes = {}, hasNonXmlnsAttribute = false, hasNilAttribute = false, obj = {};\n            var originalName = name;\n            if (!objectName && top.name === 'Body' && name !== 'Fault') {\n                var message = self.definitions.messages[name];\n                // Support RPC/literal messages where response body contains one element named\n                // after the operation + 'Response'. See http://www.w3.org/TR/wsdl#_names\n                if (!message) {\n                    // Determine if this is request or response\n                    var isInput = false;\n                    var isOutput = false;\n                    if ((/Response$/).test(name)) {\n                        isOutput = true;\n                        name = name.replace(/Response$/, '');\n                    }\n                    else if ((/Request$/).test(name)) {\n                        isInput = true;\n                        name = name.replace(/Request$/, '');\n                    }\n                    else if ((/Solicit$/).test(name)) {\n                        isInput = true;\n                        name = name.replace(/Solicit$/, '');\n                    }\n                    // Look up the appropriate message as given in the portType's operations\n                    var portTypes = self.definitions.portTypes;\n                    var portTypeNames = Object.keys(portTypes);\n                    // Currently this supports only one portType definition.\n                    var portType = portTypes[portTypeNames[0]];\n                    if (isInput) {\n                        name = portType.methods[name].input.$name;\n                    }\n                    else {\n                        name = portType.methods[name].output.$name;\n                    }\n                    message = self.definitions.messages[name];\n                    // 'cache' this alias to speed future lookups\n                    self.definitions.messages[originalName] = self.definitions.messages[name];\n                }\n                topSchema = message.description(self.definitions);\n                objectName = originalName;\n            }\n            if (attrs.href) {\n                id = attrs.href.substr(1);\n                if (!refs[id]) {\n                    refs[id] = { hrefs: [], obj: null };\n                }\n                refs[id].hrefs.push({ par: top.object, key: name, obj: obj });\n            }\n            if (id = attrs.id) {\n                if (!refs[id]) {\n                    refs[id] = { hrefs: [], obj: null };\n                }\n            }\n            //Handle element attributes\n            for (attributeName in attrs) {\n                if (/^xmlns:|^xmlns$/.test(attributeName)) {\n                    xmlns[splitQName(attributeName).name] = attrs[attributeName];\n                    continue;\n                }\n                hasNonXmlnsAttribute = true;\n                elementAttributes[attributeName] = attrs[attributeName];\n            }\n            for (attributeName in elementAttributes) {\n                var res = splitQName(attributeName);\n                if (res.name === 'nil' && xmlns[res.prefix] === 'http://www.w3.org/2001/XMLSchema-instance') {\n                    hasNilAttribute = true;\n                    break;\n                }\n            }\n            if (hasNonXmlnsAttribute) {\n                obj[self.options.attributesKey] = elementAttributes;\n            }\n            // Pick up the schema for the type specified in element's xsi:type attribute.\n            var xsiTypeSchema;\n            var xsiType = elementAttributes['xsi:type'];\n            if (xsiType) {\n                var type = splitQName(xsiType);\n                var typeURI;\n                if (type.prefix === TNS_PREFIX) {\n                    // In case of xsi:type = \"MyType\"\n                    typeURI = xmlns[type.prefix] || xmlns.xmlns;\n                }\n                else {\n                    typeURI = xmlns[type.prefix];\n                }\n                var typeDef = self.findSchemaObject(typeURI, type.name);\n                if (typeDef) {\n                    xsiTypeSchema = typeDef.description(self.definitions);\n                }\n            }\n            if (topSchema && topSchema[name + '[]']) {\n                name = name + '[]';\n            }\n            stack.push({ name: originalName, object: obj, schema: (xsiTypeSchema || (topSchema && topSchema[name])), id: attrs.id, nil: hasNilAttribute });\n        };\n        p.onclosetag = function (nsName) {\n            var cur = stack.pop(), obj = cur.object, top = stack[stack.length - 1], topObject = top.object, topSchema = top.schema, name = splitQName(nsName).name;\n            if (typeof cur.schema === 'string' && (cur.schema === 'string' || cur.schema.split(':')[1] === 'string')) {\n                if (typeof obj === 'object' && Object.keys(obj).length === 0)\n                    obj = cur.object = '';\n            }\n            if (cur.nil === true) {\n                return;\n            }\n            if (_.isPlainObject(obj) && !Object.keys(obj).length) {\n                obj = null;\n            }\n            if (topSchema && topSchema[name + '[]']) {\n                if (!topObject[name]) {\n                    topObject[name] = [];\n                }\n                topObject[name].push(obj);\n            }\n            else if (name in topObject) {\n                if (!Array.isArray(topObject[name])) {\n                    topObject[name] = [topObject[name]];\n                }\n                topObject[name].push(obj);\n            }\n            else {\n                topObject[name] = obj;\n            }\n            if (cur.id) {\n                refs[cur.id].obj = obj;\n            }\n        };\n        p.oncdata = function (text) {\n            text = trim(text);\n            if (!text.length) {\n                return;\n            }\n            if (/<\\?xml[\\s\\S]+\\?>/.test(text)) {\n                var top = stack[stack.length - 1];\n                var value = self.xmlToObject(text);\n                if (top.object[self.options.attributesKey]) {\n                    top.object[self.options.valueKey] = value;\n                }\n                else {\n                    top.object = value;\n                }\n            }\n            else {\n                p.ontext(text);\n            }\n        };\n        p.onerror = function (e) {\n            p.resume();\n            throw {\n                Fault: {\n                    faultcode: 500,\n                    faultstring: 'Invalid XML',\n                    detail: new Error(e.message).message,\n                    statusCode: 500\n                }\n            };\n        };\n        p.ontext = function (text) {\n            text = trim(text);\n            if (!text.length) {\n                return;\n            }\n            var top = stack[stack.length - 1];\n            var name = splitQName(top.schema).name, value;\n            if (self.options && self.options.customDeserializer && self.options.customDeserializer[name]) {\n                value = self.options.customDeserializer[name](text, top);\n            }\n            else {\n                if (name === 'int' || name === 'integer') {\n                    value = parseInt(text, 10);\n                }\n                else if (name === 'bool' || name === 'boolean') {\n                    value = text.toLowerCase() === 'true' || text === '1';\n                }\n                else if (name === 'dateTime' || name === 'date') {\n                    value = new Date(text);\n                }\n                else {\n                    // handle string or other types\n                    if (typeof top.object !== 'string') {\n                        value = text;\n                    }\n                    else {\n                        value = top.object + text;\n                    }\n                }\n            }\n            if (top.object[self.options.attributesKey]) {\n                top.object[self.options.valueKey] = value;\n            }\n            else {\n                top.object = value;\n            }\n        };\n        if (typeof callback === 'function') {\n            // we be streaming\n            var saxStream = sax.createStream(true, {});\n            saxStream.on('opentag', p.onopentag);\n            saxStream.on('closetag', p.onclosetag);\n            saxStream.on('cdata', p.oncdata);\n            saxStream.on('text', p.ontext);\n            xml.pipe(saxStream)\n                .on('error', function (err) {\n                callback(err);\n            })\n                .on('end', function () {\n                var r;\n                try {\n                    r = finish();\n                }\n                catch (e) {\n                    return callback(e);\n                }\n                callback(null, r);\n            });\n            return;\n        }\n        p.write(xml).close();\n        return finish();\n        function finish() {\n            // MultiRef support: merge objects instead of replacing\n            for (var n in refs) {\n                var ref = refs[n];\n                for (var i = 0; i < ref.hrefs.length; i++) {\n                    _.assign(ref.hrefs[i].obj, ref.obj);\n                }\n            }\n            if (root.Envelope) {\n                var body = root.Envelope.Body;\n                if (body && body.Fault) {\n                    var code = body.Fault && body.Fault.faultcode && body.Fault.faultcode.$value ? body.Fault.faultcode.$value : body.Fault && body.Fault.faultcode;\n                    // selectn('faultcode.$value', body.Fault) || selectn('faultcode', body.Fault);\n                    var string = body.Fault && body.Fault.faultstring && body.Fault.faultstring.$value ? body.Fault.faultstring.$value : body.Fault && body.Fault.faultstring;\n                    // selectn('faultstring.$value', body.Fault) || selectn('faultstring', body.Fault);\n                    var detail = body.Fault && body.Fault.detail && body.Fault.detail.$value ? body.Fault.detail.$value : body.Fault && body.Fault.detail && body.Fault.detail.message;\n                    // selectn('detail.$value', body.Fault) || selectn('detail.message', body.Fault);\n                    var error = new Error(code + ': ' + string + (detail ? ': ' + detail : ''));\n                    error.root = root;\n                    throw error;\n                }\n                return root.Envelope;\n            }\n            return root;\n        }\n    };\n    WSDL.prototype._processNextInclude = function (includes) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            resolve(_this.definitions);\n            // var include = includes.shift();\n            // var options;\n            // if (!include) { resolve(this.definitions) }\n            // var includePath = resolveUrl(this.uri || '', include.location);\n            // options = _.assign({}, this.options);\n            // // follow supplied ignoredNamespaces option\n            // options.ignoredNamespaces = this._originalIgnoredNamespaces || this.options.ignoredNamespaces;\n            // return openWsdl(includePath, options)\n            //   .then(wsdl => {\n            //     this._includesWsdl.push(wsdl);\n            //     if (wsdl.definitions instanceof DefinitionsElement) {\n            //       _.merge(this.definitions, wsdl.definitions, function (a: any, b: any) {\n            //         return (a instanceof SchemaElement) ? a.merge(b) : undefined;\n            //       });\n            //     } else {\n            //       this.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace] = deepMerge(this.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace], wsdl.definitions);\n            //     }\n            //     return this._processNextInclude(includes);\n            //   })\n            //   .catch(err => reject(err));\n        });\n    };\n    WSDL.prototype._initializeOptions = function (options) {\n        this._originalIgnoredNamespaces = (options || {}).ignoredNamespaces;\n        this.options = {};\n        var ignoredNamespaces = options ? options.ignoredNamespaces : null;\n        if (ignoredNamespaces &&\n            (Array.isArray(ignoredNamespaces.namespaces) || typeof ignoredNamespaces.namespaces === 'string')) {\n            if (ignoredNamespaces.override) {\n                this.options.ignoredNamespaces = ignoredNamespaces.namespaces;\n            }\n            else {\n                this.options.ignoredNamespaces = this.ignoredNamespaces.concat(ignoredNamespaces.namespaces);\n            }\n        }\n        else {\n            this.options.ignoredNamespaces = this.ignoredNamespaces;\n        }\n        this.options.valueKey = options.valueKey || this.valueKey;\n        this.options.xmlKey = options.xmlKey || this.xmlKey;\n        if (options.escapeXML !== undefined) {\n            this.options.escapeXML = options.escapeXML;\n        }\n        else {\n            this.options.escapeXML = true;\n        }\n        // Allow any request headers to keep passing through\n        this.options.wsdl_headers = options.wsdl_headers;\n        this.options.wsdl_options = options.wsdl_options;\n        if (options.httpClient) {\n            this.options.httpClient = options.httpClient;\n        }\n        // // The supplied request-object should be passed through\n        // if (options.request) {\n        //   this.options.request = options.request;\n        // }\n        var ignoreBaseNameSpaces = options ? options.ignoreBaseNameSpaces : null;\n        if (ignoreBaseNameSpaces !== null && typeof ignoreBaseNameSpaces !== 'undefined') {\n            this.options.ignoreBaseNameSpaces = ignoreBaseNameSpaces;\n        }\n        else {\n            this.options.ignoreBaseNameSpaces = this.ignoreBaseNameSpaces;\n        }\n        // Works only in client\n        this.options.forceSoap12Headers = options.forceSoap12Headers;\n        this.options.customDeserializer = options.customDeserializer;\n        if (options.overrideRootElement !== undefined) {\n            this.options.overrideRootElement = options.overrideRootElement;\n        }\n    };\n    WSDL.prototype._fromXML = function (xml) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.definitions = _this._parse(xml);\n            _this.definitions.descriptions = {\n                types: {}\n            };\n            _this.xml = xml;\n            resolve(_this.definitions);\n        });\n    };\n    WSDL.prototype._parse = function (xml) {\n        var self = this, p = sax.parser(true, {}), stack = [], root = null, types = null, schema = null, options = self.options;\n        p.onopentag = function (node) {\n            var nsName = node.name;\n            var attrs = node.attributes;\n            var top = stack[stack.length - 1];\n            var name;\n            if (top) {\n                try {\n                    stack = top.startElement(stack, nsName, attrs, options);\n                }\n                catch (e) {\n                    if (self.options.strict) {\n                        throw e;\n                    }\n                    else {\n                        stack.push(new Element(nsName, attrs, options));\n                    }\n                }\n            }\n            else {\n                name = splitQName(nsName).name;\n                if (name === 'definitions') {\n                    root = new DefinitionsElement(nsName, attrs, options);\n                    stack.push(root);\n                }\n                else if (name === 'schema') {\n                    // Shim a structure in here to allow the proper objects to be created when merging back.\n                    root = new DefinitionsElement('definitions', {}, {});\n                    types = new TypesElement('types', {}, {});\n                    schema = new SchemaElement(nsName, attrs, options);\n                    types.addChild(schema);\n                    root.addChild(types);\n                    stack.push(schema);\n                }\n                else {\n                    throw new Error('Unexpected root element of WSDL or include');\n                }\n            }\n        };\n        p.onclosetag = function (name) {\n            var top = stack[stack.length - 1];\n            // assert(top, 'Unmatched close tag: ' + name);\n            stack = top.endElement(stack, name);\n        };\n        p.write(xml).close();\n        return root;\n    };\n    WSDL.prototype._xmlnsMap = function () {\n        var xmlns = this.definitions.xmlns;\n        var str = '';\n        for (var alias in xmlns) {\n            if (alias === '' || alias === TNS_PREFIX) {\n                continue;\n            }\n            var ns = xmlns[alias];\n            switch (ns) {\n                case \"http://xml.apache.org/xml-soap\": // apachesoap\n                case \"http://schemas.xmlsoap.org/wsdl/\": // wsdl\n                case \"http://schemas.xmlsoap.org/wsdl/soap/\": // wsdlsoap\n                case \"http://schemas.xmlsoap.org/wsdl/soap12/\": // wsdlsoap12\n                case \"http://schemas.xmlsoap.org/soap/encoding/\": // soapenc\n                case \"http://www.w3.org/2001/XMLSchema\":\n                    continue;\n            }\n            if (~ns.indexOf('http://schemas.xmlsoap.org/')) {\n                continue;\n            }\n            if (~ns.indexOf('http://www.w3.org/')) {\n                continue;\n            }\n            if (~ns.indexOf('http://xml.apache.org/')) {\n                continue;\n            }\n            str += ' xmlns:' + alias + '=\"' + ns + '\"';\n        }\n        return str;\n    };\n    return WSDL;\n}());\nexport { WSDL };\nvar Element = (function () {\n    function Element(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        this.children = [];\n        this.allowedChildren = {};\n        this.includes = [];\n        this.methods = {};\n        this.ports = {};\n        var parts = splitQName(nsName);\n        this.nsName = nsName;\n        this.prefix = parts.prefix;\n        this.name = parts.name;\n        this.children = [];\n        this.xmlns = {};\n        this._initializeOptions(options);\n        for (var key in attrs) {\n            var match = /^xmlns:?(.*)$/.exec(key);\n            if (match) {\n                this.xmlns[match[1] ? match[1] : TNS_PREFIX] = attrs[key];\n            }\n            else {\n                if (key === 'value') {\n                    this[this.valueKey] = attrs[key];\n                }\n                else {\n                    this['$' + key] = attrs[key];\n                }\n            }\n        }\n        if (this.$targetNamespace !== undefined) {\n            // Add targetNamespace to the mapping\n            this.xmlns[TNS_PREFIX] = this.$targetNamespace;\n        }\n        // this.allowedChildren = mapElementTypes(splitQName(nsName).name);\n    }\n    Element.prototype._initializeOptions = function (options) {\n        if (options) {\n            this.valueKey = options.valueKey || '$value';\n            this.xmlKey = options.xmlKey || '$xml';\n            this.ignoredNamespaces = options.ignoredNamespaces || [];\n        }\n        else {\n            this.valueKey = '$value';\n            this.xmlKey = '$xml';\n            this.ignoredNamespaces = [];\n        }\n    };\n    ;\n    Element.prototype.deleteFixedAttrs = function () {\n        this.children && this.children.length === 0 && delete this.children;\n        this.xmlns && Object.keys(this.xmlns).length === 0 && delete this.xmlns;\n        delete this.nsName;\n        delete this.prefix;\n        delete this.name;\n    };\n    ;\n    Element.prototype.startElement = function (stack, nsName, attrs, options) {\n        // if (!this.allowedChildren) {\n        //   return;\n        // }\n        // let ChildClass = this.allowedChildren[splitQName(nsName).name];\n        // let element = null;\n        // if (ChildClass) {\n        //   stack.push(new ChildClass(nsName, attrs, options));\n        // }\n        // else {\n        //   this.unexpected(nsName);\n        // }\n        var ChildClass = ElementTypeMap[splitQName(nsName).name][0];\n        if (ChildClass) {\n            stack.push(new ChildClass(nsName, attrs, options));\n        }\n        ;\n        return stack;\n    };\n    Element.prototype.unexpected = function (name) {\n        throw new Error('Found unexpected element (' + name + ') inside ' + this.nsName);\n    };\n    Element.prototype.endElement = function (stack, nsName) {\n        if (this.nsName === nsName) {\n            if (stack.length < 2)\n                return;\n            var parent = stack[stack.length - 2];\n            if (this !== stack[0]) {\n                _.defaultsDeep(stack[0].xmlns, this.xmlns);\n                // delete this.xmlns;\n                parent.children.push(this);\n                parent.addChild(this);\n            }\n            stack.pop();\n        }\n        return stack;\n    };\n    Element.prototype.addChild = function (child) { return; };\n    Element.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        return this.$name || this.name;\n    };\n    Element.prototype.init = function () {\n    };\n    return Element;\n}());\nvar MessageElement = (function (_super) {\n    __extends(MessageElement, _super);\n    function MessageElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    MessageElement.prototype.init = function () {\n        this.element = null;\n        this.parts = null;\n    };\n    MessageElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        if (this.element) {\n            return this.element && this.element.description(definitions);\n        }\n        var desc = {};\n        desc[this.$name] = this.parts;\n        return desc;\n    };\n    MessageElement.prototype.postProcess = function (definitions) {\n        var part = null;\n        var child;\n        var children = this.children || [];\n        var ns;\n        var nsName;\n        var i;\n        var type;\n        for (i in children) {\n            if ((child = children[i]).name === 'part') {\n                part = child;\n                break;\n            }\n        }\n        if (!part) {\n            return;\n        }\n        if (part.$element) {\n            var lookupTypes = [], elementChildren;\n            delete this.parts;\n            nsName = splitQName(part.$element);\n            ns = nsName.prefix;\n            var schema = definitions.schemas[definitions.xmlns[ns]];\n            this.element = schema.elements[nsName.name];\n            if (!this.element) {\n                return;\n            }\n            this.element.targetNSAlias = ns;\n            this.element.targetNamespace = definitions.xmlns[ns];\n            // set the optional $lookupType to be used within `client#_invoke()` when\n            // calling `wsdl#objectToDocumentXML()\n            this.element.$lookupType = part.$element;\n            elementChildren = this.element.children;\n            // get all nested lookup types (only complex types are followed)\n            if (elementChildren.length > 0) {\n                for (i = 0; i < elementChildren.length; i++) {\n                    lookupTypes.push(this._getNestedLookupTypeString(elementChildren[i]));\n                }\n            }\n            // if nested lookup types where found, prepare them for furter usage\n            if (lookupTypes.length > 0) {\n                lookupTypes = lookupTypes.\n                    join('_').\n                    split('_').\n                    filter(function removeEmptyLookupTypes(type) {\n                    return type !== '^';\n                });\n                var schemaXmlns = definitions.schemas[this.element.targetNamespace].xmlns;\n                for (i = 0; i < lookupTypes.length; i++) {\n                    lookupTypes[i] = this._createLookupTypeObject(lookupTypes[i], schemaXmlns);\n                }\n            }\n            this.element.$lookupTypes = lookupTypes;\n            if (this.element.$type) {\n                type = splitQName(this.element.$type);\n                var typeNs = schema.xmlns && schema.xmlns[type.prefix] || definitions.xmlns[type.prefix];\n                if (typeNs) {\n                    if (type.name in Primitives) {\n                        // this.element = this.element.$type;\n                    }\n                    else {\n                        // first check local mapping of ns alias to namespace\n                        schema = definitions.schemas[typeNs];\n                        var ctype = schema.complexTypes[type.name] || schema.types[type.name] || schema.elements[type.name];\n                        if (ctype) {\n                            this.parts = ctype.description(definitions, schema.xmlns);\n                        }\n                    }\n                }\n            }\n            else {\n                var method = this.element.description(definitions, schema.xmlns);\n                this.parts = method[nsName.name];\n            }\n            this.children.splice(0, 1);\n        }\n        else {\n            // rpc encoding\n            this.parts = {};\n            delete this.element;\n            for (i = 0; part = this.children[i]; i++) {\n                if (part.name === 'documentation') {\n                    // <wsdl:documentation can be present under <wsdl:message>\n                    continue;\n                }\n                //assert(part.name === 'part', 'Expected part element');\n                nsName = splitQName(part.$type);\n                ns = definitions.xmlns[nsName.prefix];\n                type = nsName.name;\n                var schemaDefinition = definitions.schemas[ns];\n                if (typeof schemaDefinition !== 'undefined') {\n                    this.parts[part.$name] = definitions.schemas[ns].types[type] || definitions.schemas[ns].complexTypes[type];\n                }\n                else {\n                    this.parts[part.$name] = part.$type;\n                }\n                if (typeof this.parts[part.$name] === 'object') {\n                    this.parts[part.$name].prefix = nsName.prefix;\n                    this.parts[part.$name].xmlns = ns;\n                }\n                this.children.splice(i--, 1);\n            }\n        }\n        this.deleteFixedAttrs();\n    };\n    MessageElement.prototype._createLookupTypeObject = function (nsString, xmlns) {\n        var splittedNSString = splitQName(nsString), nsAlias = splittedNSString.prefix, splittedName = splittedNSString.name.split('#'), type = splittedName[0], name = splittedName[1], lookupTypeObj = {};\n        lookupTypeObj.$namespace = xmlns[nsAlias];\n        lookupTypeObj.$type = nsAlias + ':' + type;\n        lookupTypeObj.$name = name;\n        return lookupTypeObj;\n    };\n    MessageElement.prototype._getNestedLookupTypeString = function (element) {\n        var _this = this;\n        var resolvedType = '^', excluded = this.ignoredNamespaces.concat('xs'); // do not process $type values wich start with\n        if (element.hasOwnProperty('$type') && typeof element.$type === 'string') {\n            if (excluded.indexOf(element.$type.split(':')[0]) === -1) {\n                resolvedType += ('_' + element.$type + '#' + element.$name);\n            }\n        }\n        if (element.children.length > 0) {\n            element.children.forEach(function (child) {\n                var resolvedChildType = _this._getNestedLookupTypeString(child).replace(/\\^_/, '');\n                if (resolvedChildType && typeof resolvedChildType === 'string') {\n                    resolvedType += ('_' + resolvedChildType);\n                }\n            });\n        }\n        return resolvedType;\n    };\n    return MessageElement;\n}(Element));\nvar SchemaElement = (function (_super) {\n    __extends(SchemaElement, _super);\n    function SchemaElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    SchemaElement.prototype.init = function () {\n        this.complexTypes = {};\n        this.types = {};\n        this.elements = {};\n        this.includes = [];\n    };\n    SchemaElement.prototype.merge = function (source) {\n        //assert(source instanceof SchemaElement);\n        if (this.$targetNamespace === source.$targetNamespace) {\n            _.merge(this.complexTypes, source.complexTypes);\n            _.merge(this.types, source.types);\n            _.merge(this.elements, source.elements);\n            _.merge(this.xmlns, source.xmlns);\n        }\n        return this;\n    };\n    SchemaElement.prototype.addChild = function (child) {\n        if (child.$name in Primitives)\n            return;\n        if (child.name === 'include' || child.name === 'import') {\n            var location = child.$schemaLocation || child.$location;\n            if (location) {\n                this.includes.push({\n                    namespace: child.$namespace || child.$targetNamespace || this.$targetNamespace,\n                    location: location\n                });\n            }\n        }\n        else if (child.name === 'complexType') {\n            this.complexTypes[child.$name] = child;\n        }\n        else if (child.name === 'element') {\n            this.elements[child.$name] = child;\n        }\n        else if (child.$name) {\n            this.types[child.$name] = child;\n        }\n        this.children.pop();\n    };\n    return SchemaElement;\n}(Element));\nvar TypesElement = (function (_super) {\n    __extends(TypesElement, _super);\n    function TypesElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    TypesElement.prototype.init = function () {\n        this.schemas = {};\n    };\n    TypesElement.prototype.addChild = function (child) {\n        //assert(child instanceof SchemaElement);\n        var targetNamespace = child.$targetNamespace;\n        if (!this.schemas.hasOwnProperty(targetNamespace)) {\n            this.schemas[targetNamespace] = child;\n        }\n        else {\n            console.error('Target-Namespace \"' + targetNamespace + '\" already in use by another Schema!');\n        }\n    };\n    return TypesElement;\n}(Element));\nvar ElementElement = (function (_super) {\n    __extends(ElementElement, _super);\n    function ElementElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    ElementElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        var element = {}, name = this.$name;\n        var isMany = !this.$maxOccurs ? false : (isNaN(this.$maxOccurs) ? (this.$maxOccurs === 'unbounded') : (this.$maxOccurs > 1));\n        if (this.$minOccurs !== this.$maxOccurs && isMany) {\n            name += '[]';\n        }\n        if (xmlns && xmlns[TNS_PREFIX]) {\n            this.$targetNamespace = xmlns[TNS_PREFIX];\n        }\n        var type = this.$type || this.$ref;\n        if (type) {\n            type = splitQName(type);\n            var typeName = type.name, ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix], schema = definitions.schemas[ns], typeElement = schema && (this.$type ? schema.complexTypes[typeName] || schema.types[typeName] : schema.elements[typeName]);\n            if (ns && definitions.schemas[ns]) {\n                xmlns = definitions.schemas[ns].xmlns;\n            }\n            if (typeElement && !(typeName in Primitives)) {\n                if (!(typeName in definitions.descriptions.types)) {\n                    var elem = {};\n                    definitions.descriptions.types[typeName] = elem;\n                    var description = typeElement.description(definitions, xmlns);\n                    if (typeof description === 'string') {\n                        elem = description;\n                    }\n                    else {\n                        Object.keys(description).forEach(function (key) {\n                            elem[key] = description[key];\n                        });\n                    }\n                    if (this.$ref) {\n                        element = elem;\n                    }\n                    else {\n                        element[name] = elem;\n                    }\n                    if (typeof elem === 'object') {\n                        elem.targetNSAlias = type.prefix;\n                        elem.targetNamespace = ns;\n                    }\n                    definitions.descriptions.types[typeName] = elem;\n                }\n                else {\n                    if (this.$ref) {\n                        element = definitions.descriptions.types[typeName];\n                    }\n                    else {\n                        element[name] = definitions.descriptions.types[typeName];\n                    }\n                }\n            }\n            else {\n                element[name] = this.$type;\n            }\n        }\n        else {\n            var children = this.children;\n            element[name] = {};\n            for (var i = 0, child; child = children[i]; i++) {\n                if (child instanceof ComplexTypeElement) {\n                    element[name] = child.description(definitions, xmlns);\n                }\n            }\n        }\n        return element;\n    };\n    return ElementElement;\n}(Element));\nvar AnyElement = (function (_super) {\n    __extends(AnyElement, _super);\n    function AnyElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    AnyElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        var children = this.children;\n        var sequence = {};\n        for (var i = 0, child; child = children[i]; i++) {\n            if (child instanceof AnyElement) {\n                continue;\n            }\n            var description = child.description(definitions, xmlns);\n            for (var key in description) {\n                sequence[key] = description[key];\n            }\n        }\n        return sequence;\n    };\n    return AnyElement;\n}(Element));\nvar InputElement = (function (_super) {\n    __extends(InputElement, _super);\n    function InputElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    InputElement.prototype.addChild = function (child) {\n        if (child.name === 'body') {\n            this.use = child.$use;\n            if (this.use === 'encoded') {\n                this.encodingStyle = child.$encodingStyle;\n            }\n            this.children.pop();\n        }\n    };\n    return InputElement;\n}(Element));\nvar OutputElement = (function (_super) {\n    __extends(OutputElement, _super);\n    function OutputElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    OutputElement.prototype.addChild = function (child) {\n        if (child.name === 'body') {\n            this.use = child.$use;\n            if (this.use === 'encoded') {\n                this.encodingStyle = child.$encodingStyle;\n            }\n            this.children.pop();\n        }\n    };\n    return OutputElement;\n}(Element));\nvar SimpleTypeElement = (function (_super) {\n    __extends(SimpleTypeElement, _super);\n    function SimpleTypeElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    SimpleTypeElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        var children = this.children;\n        for (var i = 0, child; child = children[i]; i++) {\n            if (child instanceof RestrictionElement)\n                return this.$name + \"|\" + child.description();\n        }\n        return {};\n    };\n    return SimpleTypeElement;\n}(Element));\nvar RestrictionElement = (function (_super) {\n    __extends(RestrictionElement, _super);\n    function RestrictionElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    RestrictionElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        var children = this.children;\n        var desc;\n        for (var i = 0, child; child = children[i]; i++) {\n            if (child instanceof SequenceElement ||\n                child instanceof ChoiceElement) {\n                desc = child.description(definitions, xmlns);\n                break;\n            }\n        }\n        if (desc && this.$base) {\n            var type = splitQName(this.$base), typeName = type.name, ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix], schema = definitions.schemas[ns], typeElement = schema && (schema.complexTypes[typeName] || schema.types[typeName] || schema.elements[typeName]);\n            desc.getBase = function () {\n                return typeElement.description(definitions, schema.xmlns);\n            };\n            return desc;\n        }\n        // then simple element\n        var base = this.$base ? this.$base + \"|\" : \"\";\n        return base + this.children.map(function (child) {\n            return child.description();\n        }).join(\",\");\n    };\n    return RestrictionElement;\n}(Element));\nvar ExtensionElement = (function (_super) {\n    __extends(ExtensionElement, _super);\n    function ExtensionElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    ExtensionElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        var children = this.children;\n        var desc = {};\n        for (var i = 0, child; child = children[i]; i++) {\n            if (child instanceof SequenceElement ||\n                child instanceof ChoiceElement) {\n                desc = child.description(definitions, xmlns);\n            }\n        }\n        if (this.$base) {\n            var type = splitQName(this.$base), typeName = type.name, ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix], schema = definitions.schemas[ns];\n            if (typeName in Primitives) {\n                return this.$base;\n            }\n            else {\n                var typeElement = schema && (schema.complexTypes[typeName] ||\n                    schema.types[typeName] || schema.elements[typeName]);\n                if (typeElement) {\n                    var base = typeElement.description(definitions, schema.xmlns);\n                    desc = _.defaultsDeep(base, desc);\n                }\n            }\n        }\n        return desc;\n    };\n    return ExtensionElement;\n}(Element));\nvar ChoiceElement = (function (_super) {\n    __extends(ChoiceElement, _super);\n    function ChoiceElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    ChoiceElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        var children = this.children;\n        var choice = {};\n        for (var i = 0, child; child = children[i]; i++) {\n            var description = child.description(definitions, xmlns);\n            for (var key in description) {\n                choice[key] = description[key];\n            }\n        }\n        return choice;\n    };\n    return ChoiceElement;\n}(Element));\nvar EnumerationElement = (function (_super) {\n    __extends(EnumerationElement, _super);\n    function EnumerationElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    EnumerationElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        return this[this.valueKey];\n    };\n    return EnumerationElement;\n}(Element));\nvar ComplexTypeElement = (function (_super) {\n    __extends(ComplexTypeElement, _super);\n    function ComplexTypeElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    ComplexTypeElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        var children = this.children || [];\n        for (var i = 0, child; child = children[i]; i++) {\n            if (child instanceof ChoiceElement ||\n                child instanceof SequenceElement ||\n                child instanceof AllElement ||\n                child instanceof SimpleContentElement ||\n                child instanceof ComplexContentElement) {\n                return child.description(definitions, xmlns);\n            }\n        }\n        return {};\n    };\n    return ComplexTypeElement;\n}(Element));\nvar ComplexContentElement = (function (_super) {\n    __extends(ComplexContentElement, _super);\n    function ComplexContentElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    ComplexContentElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        var children = this.children;\n        for (var i = 0, child; child = children[i]; i++) {\n            if (child instanceof ExtensionElement) {\n                return child.description(definitions, xmlns);\n            }\n        }\n        return {};\n    };\n    return ComplexContentElement;\n}(Element));\nvar SimpleContentElement = (function (_super) {\n    __extends(SimpleContentElement, _super);\n    function SimpleContentElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    SimpleContentElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        var children = this.children;\n        for (var i = 0, child; child = children[i]; i++) {\n            if (child instanceof ExtensionElement) {\n                return child.description(definitions, xmlns);\n            }\n        }\n        return {};\n    };\n    return SimpleContentElement;\n}(Element));\nvar SequenceElement = (function (_super) {\n    __extends(SequenceElement, _super);\n    function SequenceElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    SequenceElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        var children = this.children;\n        var sequence = {};\n        for (var i = 0, child; child = children[i]; i++) {\n            if (child instanceof AnyElement) {\n                continue;\n            }\n            var description = child.description(definitions, xmlns);\n            for (var key in description) {\n                sequence[key] = description[key];\n            }\n        }\n        return sequence;\n    };\n    return SequenceElement;\n}(Element));\nvar AllElement = (function (_super) {\n    __extends(AllElement, _super);\n    function AllElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    AllElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        var children = this.children;\n        var sequence = {};\n        for (var i = 0, child; child = children[i]; i++) {\n            if (child instanceof AnyElement) {\n                continue;\n            }\n            var description = child.description(definitions, xmlns);\n            for (var key in description) {\n                sequence[key] = description[key];\n            }\n        }\n        return sequence;\n    };\n    return AllElement;\n}(Element));\nvar OperationElement = (function (_super) {\n    __extends(OperationElement, _super);\n    function OperationElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    OperationElement.prototype.init = function () {\n        this.input = null;\n        this.output = null;\n        this.inputSoap = null;\n        this.outputSoap = null;\n        this.style = '';\n        this.soapAction = '';\n    };\n    OperationElement.prototype.addChild = function (child) {\n        if (child.name === 'operation') {\n            this.soapAction = child.$soapAction || '';\n            this.style = child.$style || '';\n            this.children.pop();\n        }\n    };\n    OperationElement.prototype.postProcess = function (definitions, tag) {\n        var children = this.children;\n        for (var i = 0, child; child = children[i]; i++) {\n            if (child.name !== 'input' && child.name !== 'output')\n                continue;\n            if (tag === 'binding') {\n                this[child.name] = child;\n                children.splice(i--, 1);\n                continue;\n            }\n            var messageName = splitQName(child.$message).name;\n            var message = definitions.messages[messageName];\n            message.postProcess(definitions);\n            if (message.element) {\n                definitions.messages[message.element.$name] = message;\n                this[child.name] = message.element;\n            }\n            else {\n                this[child.name] = message;\n            }\n            children.splice(i--, 1);\n        }\n        this.deleteFixedAttrs();\n    };\n    OperationElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        var inputDesc = this.input ? this.input.description(definitions) : null;\n        var outputDesc = this.output ? this.output.description(definitions) : null;\n        return {\n            input: inputDesc && inputDesc[Object.keys(inputDesc)[0]],\n            output: outputDesc && outputDesc[Object.keys(outputDesc)[0]]\n        };\n    };\n    return OperationElement;\n}(Element));\nvar PortTypeElement = (function (_super) {\n    __extends(PortTypeElement, _super);\n    function PortTypeElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    PortTypeElement.prototype.init = function () {\n        this.methods = {};\n    };\n    PortTypeElement.prototype.postProcess = function (definitions) {\n        var children = this.children;\n        if (typeof children === 'undefined')\n            return;\n        for (var i = 0, child; child = children[i]; i++) {\n            if (child.name !== 'operation')\n                continue;\n            child.postProcess(definitions, 'portType');\n            this.methods[child.$name] = child;\n            children.splice(i--, 1);\n        }\n        delete this.$name;\n        this.deleteFixedAttrs();\n    };\n    PortTypeElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        var methods = {};\n        for (var name in this.methods) {\n            var method = this.methods[name];\n            methods[name] = method.description(definitions);\n        }\n        return methods;\n    };\n    return PortTypeElement;\n}(Element));\nvar BindingElement = (function (_super) {\n    __extends(BindingElement, _super);\n    function BindingElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    BindingElement.prototype.init = function () {\n        this.transport = '';\n        this.style = '';\n        this.methods = {};\n    };\n    BindingElement.prototype.addChild = function (child) {\n        if (child.name === 'binding') {\n            this.transport = child.$transport;\n            this.style = child.$style;\n            this.children.pop();\n        }\n    };\n    BindingElement.prototype.postProcess = function (definitions) {\n        var type = splitQName(this.$type).name, portType = definitions.portTypes[type], style = this.style, children = this.children;\n        if (portType) {\n            portType.postProcess(definitions);\n            this.methods = portType.methods;\n            for (var i = 0, child; child = children[i]; i++) {\n                if (child.name !== 'operation')\n                    continue;\n                child.postProcess(definitions, 'binding');\n                children.splice(i--, 1);\n                child.style || (child.style = style);\n                var method = this.methods[child.$name];\n                if (method) {\n                    method.style = child.style;\n                    method.soapAction = child.soapAction;\n                    method.inputSoap = child.input || null;\n                    method.outputSoap = child.output || null;\n                    method.inputSoap && method.inputSoap.deleteFixedAttrs();\n                    method.outputSoap && method.outputSoap.deleteFixedAttrs();\n                }\n            }\n        }\n        delete this.$name;\n        delete this.$type;\n        this.deleteFixedAttrs();\n    };\n    BindingElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        var methods = {};\n        for (var name in this.methods) {\n            var method = this.methods[name];\n            methods[name] = method.description(definitions);\n        }\n        return methods;\n    };\n    return BindingElement;\n}(Element));\nvar PortElement = (function (_super) {\n    __extends(PortElement, _super);\n    function PortElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    PortElement.prototype.init = function () {\n        this.location = null;\n    };\n    PortElement.prototype.addChild = function (child) {\n        if (child.name === 'address' && typeof (child.$location) !== 'undefined') {\n            this.location = child.$location;\n        }\n    };\n    return PortElement;\n}(Element));\nvar ServiceElement = (function (_super) {\n    __extends(ServiceElement, _super);\n    function ServiceElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    ServiceElement.prototype.init = function () {\n        this.ports = {};\n    };\n    ServiceElement.prototype.postProcess = function (definitions) {\n        var children = this.children, bindings = definitions.bindings;\n        if (children && children.length > 0) {\n            for (var i = 0, child; child = children[i]; i++) {\n                if (child.name !== 'port')\n                    continue;\n                var bindingName = splitQName(child.$binding).name;\n                var binding = bindings[bindingName];\n                if (binding) {\n                    binding.postProcess(definitions);\n                    this.ports[child.$name] = {\n                        location: child.location,\n                        binding: binding\n                    };\n                    children.splice(i--, 1);\n                }\n            }\n        }\n        delete this.$name;\n        this.deleteFixedAttrs();\n    };\n    ServiceElement.prototype.description = function (definitions, xmlns) {\n        if (definitions === void 0) { definitions = {}; }\n        var ports = {};\n        for (var name in this.ports) {\n            var port = this.ports[name];\n            ports[name] = port.binding.description(definitions);\n        }\n        return ports;\n    };\n    return ServiceElement;\n}(Element));\nvar DefinitionsElement = (function (_super) {\n    __extends(DefinitionsElement, _super);\n    function DefinitionsElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    DefinitionsElement.prototype.init = function () {\n        if (this.name !== 'definitions')\n            this.unexpected(this.nsName);\n        this.messages = {};\n        this.portTypes = {};\n        this.bindings = {};\n        this.services = {};\n        this.schemas = {};\n    };\n    DefinitionsElement.prototype.addChild = function (child) {\n        if (child instanceof TypesElement) {\n            // Merge types.schemas into definitions.schemas\n            _.merge(this.schemas, child.schemas);\n        }\n        else if (child instanceof MessageElement) {\n            this.messages[child.$name] = child;\n        }\n        else if (child.name === 'import') {\n            this.schemas[child.$namespace] = new SchemaElement(child.$namespace, {});\n            this.schemas[child.$namespace].addChild(child);\n        }\n        else if (child instanceof PortTypeElement) {\n            this.portTypes[child.$name] = child;\n        }\n        else if (child instanceof BindingElement) {\n            if (child.transport === 'http://schemas.xmlsoap.org/soap/http' ||\n                child.transport === 'http://www.w3.org/2003/05/soap/bindings/HTTP/')\n                this.bindings[child.$name] = child;\n        }\n        else if (child instanceof ServiceElement) {\n            this.services[child.$name] = child;\n        }\n        else if (child instanceof DocumentationElement) {\n        }\n        this.children.pop();\n    };\n    return DefinitionsElement;\n}(Element));\nvar DocumentationElement = (function (_super) {\n    __extends(DocumentationElement, _super);\n    function DocumentationElement(nsName, attrs, options) {\n        if (attrs === void 0) { attrs = {}; }\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, nsName, attrs, options) || this;\n        _this.init();\n        return _this;\n    }\n    return DocumentationElement;\n}(Element));\nvar ElementTypeMap = {\n    types: [TypesElement, 'schema documentation'],\n    schema: [SchemaElement, 'element complexType simpleType include import'],\n    element: [ElementElement, 'annotation complexType'],\n    any: [AnyElement, ''],\n    simpleType: [SimpleTypeElement, 'restriction'],\n    restriction: [RestrictionElement, 'enumeration all choice sequence'],\n    extension: [ExtensionElement, 'all sequence choice'],\n    choice: [ChoiceElement, 'element sequence choice any'],\n    // group: [GroupElement, 'element group'],\n    enumeration: [EnumerationElement, ''],\n    complexType: [ComplexTypeElement, 'annotation sequence all complexContent simpleContent choice'],\n    complexContent: [ComplexContentElement, 'extension'],\n    simpleContent: [SimpleContentElement, 'extension'],\n    sequence: [SequenceElement, 'element sequence choice any'],\n    all: [AllElement, 'element choice'],\n    service: [ServiceElement, 'port documentation'],\n    port: [PortElement, 'address documentation'],\n    binding: [BindingElement, '_binding SecuritySpec operation documentation'],\n    portType: [PortTypeElement, 'operation documentation'],\n    message: [MessageElement, 'part documentation'],\n    operation: [OperationElement, 'documentation input output fault _operation'],\n    input: [InputElement, 'body SecuritySpecRef documentation header'],\n    output: [OutputElement, 'body SecuritySpecRef documentation header'],\n    fault: [Element, '_fault documentation'],\n    definitions: [DefinitionsElement, 'types message portType binding service import documentation'],\n    documentation: [DocumentationElement, '']\n};\n//# sourceMappingURL=wsdl.js.map","import { openWsdl } from './wsdl';\nimport { Client } from \"./client\";\nexport function createSoapClient(wsdl, options) {\n    if (options === void 0) { options = {}; }\n    return openWsdl(wsdl, options)\n        .then(function (wsdl) {\n        return new Client(wsdl);\n    })\n        .catch(function (err) { throw new Error(err); });\n}\n//# sourceMappingURL=soap.js.map","var NamespaceScope = (function () {\n    /**\n     * Scope for XML namespaces\n     * @param {NamespaceScope} [parent] Parent scope\n     * @returns {NamespaceScope}\n     * @constructor\n     */\n    function NamespaceScope(parent) {\n        this.namespaces = {};\n        if (!(this instanceof NamespaceScope)) {\n            return new NamespaceScope(parent);\n        }\n        this.parent = parent;\n        this.namespaces = {};\n    }\n    /**\n     * Look up the namespace URI by prefix\n     * @param {String} prefix Namespace prefix\n     * @param {Boolean} [localOnly] Search current scope only\n     * @returns {String} Namespace URI\n     */\n    NamespaceScope.prototype.getNamespaceURI = function (prefix, localOnly) {\n        switch (prefix) {\n            case 'xml':\n                return 'http://www.w3.org/XML/1998/namespace';\n            case 'xmlns':\n                return 'http://www.w3.org/2000/xmlns/';\n            default:\n                var nsUri = this.namespaces[prefix];\n                /*jshint -W116 */\n                if (nsUri != null) {\n                    return nsUri.uri;\n                }\n                else if (!localOnly && this.parent) {\n                    return this.parent.getNamespaceURI(prefix);\n                }\n                else {\n                    return null;\n                }\n        }\n    };\n    NamespaceScope.prototype.getNamespaceMapping = function (prefix) {\n        switch (prefix) {\n            case 'xml':\n                return {\n                    uri: 'http://www.w3.org/XML/1998/namespace',\n                    prefix: 'xml',\n                    declared: true\n                };\n            case 'xmlns':\n                return {\n                    uri: 'http://www.w3.org/2000/xmlns/',\n                    prefix: 'xmlns',\n                    declared: true\n                };\n            default:\n                var mapping = this.namespaces[prefix];\n                /*jshint -W116 */\n                if (mapping != null) {\n                    return mapping;\n                }\n                else if (this.parent) {\n                    return this.parent.getNamespaceMapping(prefix);\n                }\n                else {\n                    return null;\n                }\n        }\n    };\n    /**\n     * Look up the namespace prefix by URI\n     * @param {String} nsUri Namespace URI\n     * @param {Boolean} [localOnly] Search current scope only\n     * @returns {String} Namespace prefix\n     */\n    NamespaceScope.prototype.getPrefix = function (nsUri, localOnly) {\n        switch (nsUri) {\n            case 'http://www.w3.org/XML/1998/namespace':\n                return 'xml';\n            case 'http://www.w3.org/2000/xmlns/':\n                return 'xmlns';\n            default:\n                for (var p in this.namespaces) {\n                    if (this.namespaces[p].uri === nsUri) {\n                        return p;\n                    }\n                }\n                if (!localOnly && this.parent) {\n                    return this.parent.getPrefix(nsUri);\n                }\n                else {\n                    return null;\n                }\n        }\n    };\n    return NamespaceScope;\n}());\nexport { NamespaceScope };\n/**\n * Namespace context that manages hierarchical scopes\n * @returns {NamespaceContext}\n * @constructor\n */\nvar NamespaceContext = (function () {\n    function NamespaceContext() {\n        /**\n         * Register a namespace\n         * @param {String} nsUri Namespace URI\n         * @returns {String} The matching or generated namespace prefix\n         */\n        this.registerNamespace = function (nsUri) {\n            var prefix = this.getPrefix(nsUri);\n            if (prefix) {\n                // If the namespace has already mapped to a prefix\n                return prefix;\n            }\n            else {\n                // Try to generate a unique namespace\n                while (true) {\n                    prefix = 'ns' + (++this.prefixCount);\n                    if (!this.getNamespaceURI(prefix)) {\n                        // The prefix is not used\n                        break;\n                    }\n                }\n            }\n            this.addNamespace(prefix, nsUri, true);\n            return prefix;\n        };\n        // if (!(this instanceof NamespaceContext)) {\n        //   return new NamespaceContext();\n        // }\n        this.scopes = [];\n        this.pushContext();\n        this.prefixCount = 0;\n    }\n    /**\n   * Add a prefix/URI namespace mapping\n   * @param {String} prefix Namespace prefix\n   * @param {String} nsUri Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {boolean} true if the mapping is added or false if the mapping\n   * already exists\n   */\n    NamespaceContext.prototype.addNamespace = function (prefix, nsUri, localOnly) {\n        if (this.getNamespaceURI(prefix, localOnly) === nsUri) {\n            return false;\n        }\n        if (this.currentScope) {\n            this.currentScope.namespaces[prefix] = {\n                uri: nsUri,\n                prefix: prefix,\n                declared: false\n            };\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Push a scope into the context\n     * @returns {NamespaceScope} The current scope\n     */\n    NamespaceContext.prototype.pushContext = function () {\n        var scope = new NamespaceScope(this.currentScope);\n        this.scopes.push(scope);\n        this.currentScope = scope;\n        return scope;\n    };\n    /**\n   * Pop a scope out of the context\n   * @returns {NamespaceScope} The removed scope\n   */\n    NamespaceContext.prototype.popContext = function () {\n        var scope = this.scopes.pop();\n        if (scope) {\n            this.currentScope = scope.parent;\n        }\n        else {\n            this.currentScope = null;\n        }\n        return scope;\n    };\n    /**\n     * Look up the namespace URI by prefix\n     * @param {String} prefix Namespace prefix\n     * @param {Boolean} [localOnly] Search current scope only\n     * @returns {String} Namespace URI\n     */\n    NamespaceContext.prototype.getNamespaceURI = function (prefix, localOnly) {\n        return this.currentScope && this.currentScope.getNamespaceURI(prefix, localOnly);\n    };\n    /**\n   * Look up the namespace prefix by URI\n   * @param {String} nsURI Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace prefix\n   */\n    NamespaceContext.prototype.getPrefix = function (nsUri, localOnly) {\n        return this.currentScope && this.currentScope.getPrefix(nsUri, localOnly);\n    };\n    /**\n     * Declare a namespace prefix/uri mapping\n     * @param {String} prefix Namespace prefix\n     * @param {String} nsUri Namespace URI\n     * @returns {Boolean} true if the declaration is created\n     */\n    NamespaceContext.prototype.declareNamespace = function (prefix, nsUri) {\n        if (this.currentScope) {\n            var mapping = this.currentScope.getNamespaceMapping(prefix);\n            if (mapping && mapping.uri === nsUri && mapping.declared) {\n                return false;\n            }\n            this.currentScope.namespaces[prefix] = {\n                uri: nsUri,\n                prefix: prefix,\n                declared: true\n            };\n            return true;\n        }\n        return false;\n    };\n    return NamespaceContext;\n}());\nexport { NamespaceContext };\n//# sourceMappingURL=nscontext.js.map","import { findPrefix } from './utils';\nimport * as assert from 'assert';\nimport * as uuid from 'uuid';\nvar Client = (function () {\n    function Client(wsdl, endpoint, options) {\n        this.httpHeaders = {};\n        options = options || {};\n        this.wsdl = wsdl;\n        this._initializeOptions(options);\n        this._initializeServices(endpoint);\n    }\n    Client.prototype.addSoapHeader = function (soapHeader, name, namespace, xmlns) {\n        if (!this.soapHeaders) {\n            this.soapHeaders = [];\n        }\n        if (typeof soapHeader === 'object') {\n            soapHeader = this.wsdl.objectToXML(soapHeader, name, namespace, xmlns, true);\n        }\n        return this.soapHeaders.push(soapHeader) - 1;\n    };\n    Client.prototype.changeSoapHeader = function (index, soapHeader, name, namespace, xmlns) {\n        if (!this.soapHeaders) {\n            this.soapHeaders = [];\n        }\n        if (typeof soapHeader === 'object') {\n            soapHeader = this.wsdl.objectToXML(soapHeader, name, namespace, xmlns, true);\n        }\n        this.soapHeaders[index] = soapHeader;\n    };\n    Client.prototype.getSoapHeaders = function () {\n        return this.soapHeaders;\n    };\n    Client.prototype.clearSoapHeaders = function () {\n        this.soapHeaders = null;\n    };\n    Client.prototype.addHttpHeader = function (name, value) {\n        if (!this.httpHeaders) {\n            this.httpHeaders = {};\n        }\n        this.httpHeaders[name] = value;\n    };\n    Client.prototype.getHttpHeaders = function () {\n        return this.httpHeaders;\n    };\n    Client.prototype.clearHttpHeaders = function () {\n        this.httpHeaders = {};\n    };\n    Client.prototype.addBodyAttribute = function (bodyAttribute, name) {\n        if (!this.bodyAttributes) {\n            this.bodyAttributes = [];\n        }\n        if (typeof bodyAttribute === 'object') {\n            var composition = '';\n            Object.getOwnPropertyNames(bodyAttribute).forEach(function (prop, idx, array) {\n                composition += ' ' + prop + '=\"' + bodyAttribute[prop] + '\"';\n            });\n            bodyAttribute = composition;\n        }\n        if (bodyAttribute.substr(0, 1) !== ' ')\n            bodyAttribute = ' ' + bodyAttribute;\n        this.bodyAttributes.push(bodyAttribute);\n    };\n    Client.prototype.getBodyAttributes = function () {\n        return this.bodyAttributes;\n    };\n    Client.prototype.clearBodyAttributes = function () {\n        this.bodyAttributes = null;\n    };\n    Client.prototype.setEndpoint = function (endpoint) {\n        this.endpoint = endpoint;\n        this._initializeServices(endpoint);\n    };\n    Client.prototype.setSecurity = function (security) {\n        this.security = security;\n    };\n    Client.prototype.setSOAPAction = function (SOAPAction) {\n        this.SOAPAction = SOAPAction;\n    };\n    Client.prototype.operation = function (name, body) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var operation = _this[name];\n            if (operation) {\n                resolve(operation.call(_this, body));\n            }\n            else {\n                reject(\"Operation \" + name + \" not found\");\n            }\n        });\n    };\n    Client.prototype.describe = function () {\n        var types = this.wsdl.definitions.types;\n        return this.wsdl.describeServices();\n    };\n    Client.prototype.parseResponseBody = function (body) {\n        try {\n            return this.wsdl.xmlToObject(body);\n        }\n        catch (error) {\n            throw new Error(\"Error parsing body\" + error);\n        }\n    };\n    Client.prototype._initializeServices = function (endpoint) {\n        var definitions = this.wsdl.definitions, services = definitions.services;\n        for (var name in services) {\n            this[name] = this._defineService(services[name], endpoint);\n        }\n    };\n    Client.prototype._initializeOptions = function (options) {\n        if (options === void 0) { options = {}; }\n        this.streamAllowed = options.stream;\n        this.wsdl.options.attributesKey = options.attributesKey || 'attributes';\n        this.wsdl.options.envelopeKey = options.envelopeKey || 'soap';\n        if (options.ignoredNamespaces !== undefined) {\n            if (options.ignoredNamespaces.override !== undefined) {\n                if (options.ignoredNamespaces.override === true) {\n                    if (options.ignoredNamespaces.namespaces !== undefined) {\n                        this.wsdl.options.ignoredNamespaces = options.ignoredNamespaces.namespaces;\n                    }\n                }\n            }\n        }\n        if (options.overrideRootElement !== undefined) {\n            this.wsdl.options.overrideRootElement = options.overrideRootElement;\n        }\n        this.wsdl.options.forceSoap12Headers = !!options.forceSoap12Headers;\n    };\n    Client.prototype._defineService = function (service, endpoint) {\n        var ports = service.ports, def = {};\n        for (var name in ports) {\n            def[name] = this._definePort(ports[name], endpoint ? endpoint : ports[name].location);\n        }\n        return def;\n    };\n    Client.prototype._definePort = function (port, endpoint) {\n        var location = endpoint, binding = port.binding, methods = binding.methods, def = {};\n        for (var name in methods) {\n            def[name] = this._defineMethod(methods[name], location);\n            this[name] = def[name];\n        }\n        return def;\n    };\n    Client.prototype._defineMethod = function (method, location) {\n        var self = this;\n        var temp;\n        return function (args, callback, options, extraHeaders) {\n            return new Promise(function (resolve, reject) {\n                if (typeof args === 'function') {\n                    callback = args;\n                    args = {};\n                }\n                else if (typeof options === 'function') {\n                    temp = callback;\n                    callback = options;\n                    options = temp;\n                }\n                else if (typeof extraHeaders === 'function') {\n                    temp = callback;\n                    callback = extraHeaders;\n                    extraHeaders = options;\n                    options = temp;\n                }\n                self._invoke(method, args, location, function (error, url, headers, xml) {\n                    if (error) {\n                        reject(error);\n                    }\n                    else {\n                        resolve({\n                            url: url,\n                            headers: headers,\n                            xml: xml\n                        });\n                    }\n                    ;\n                }, options, extraHeaders);\n            });\n        };\n    };\n    Client.prototype._invoke = function (method, args, location, callback, options, extraHeaders) {\n        var self = this, name = method.$name, input = method.input, output = method.output, style = method.style, defs = this.wsdl.definitions, envelopeKey = this.wsdl.options.envelopeKey, ns = defs.$targetNamespace, encoding = '', message = '', xml = null, req = null, soapAction, alias = findPrefix(defs.xmlns, ns), headers = {}, xmlnsSoap = \"xmlns:\" + envelopeKey + \"=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"\";\n        headers[\"Content-Type\"] = \"text/xml; charset=utf-8\";\n        if (this.wsdl.options.forceSoap12Headers) {\n            headers[\"Content-Type\"] = \"application/soap+xml; charset=utf-8\";\n            xmlnsSoap = \"xmlns:\" + envelopeKey + \"=\\\"http://www.w3.org/2003/05/soap-envelope\\\"\";\n        }\n        if (this.SOAPAction) {\n            soapAction = this.SOAPAction;\n        }\n        else if (method.soapAction !== undefined && method.soapAction !== null) {\n            soapAction = method.soapAction;\n        }\n        else {\n            soapAction = ((ns.lastIndexOf(\"/\") !== ns.length - 1) ? ns + \"/\" : ns) + name;\n        }\n        if (!this.wsdl.options.forceSoap12Headers) {\n            headers[\"SOAPAction\"] = '\"' + soapAction + '\"';\n        }\n        options = options || {};\n        //Add extra headers\n        for (var header in this.httpHeaders) {\n            headers[header] = this.httpHeaders[header];\n        }\n        for (var attr in extraHeaders) {\n            headers[attr] = extraHeaders[attr];\n        }\n        // Allow the security object to add headers\n        if (this.security && this.security.addHeaders) {\n            headers = self.security.addHeaders(headers);\n        }\n        if (this.security && this.security.addOptions)\n            self.security.addOptions(options);\n        if ((style === 'rpc') && ((input.parts || input.name === \"element\") || args === null)) {\n            assert.ok(!style || style === 'rpc', 'invalid message definition for document style binding');\n            message = self.wsdl.objectToRpcXML(name, args, alias, ns, (input.name !== \"element\"));\n            (method.inputSoap === 'encoded') && (encoding = 'soap:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" ');\n        }\n        else {\n            assert.ok(!style || style === 'document', 'invalid message definition for rpc style binding');\n            // pass `input.$lookupType` if `input.$type` could not be found\n            message = self.wsdl.objectToDocumentXML(input.$name, args, input.targetNSAlias, input.targetNamespace, (input.$type || input.$lookupType));\n        }\n        xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\" +\n            \"<\" + envelopeKey + \":Envelope \" +\n            xmlnsSoap + \" \" +\n            \"xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \" +\n            encoding +\n            this.wsdl.xmlnsInEnvelope + '>' +\n            ((self.soapHeaders || self.security) ?\n                (\"<\" + envelopeKey + \":Header>\" +\n                    (self.soapHeaders ? self.soapHeaders.join(\"\\n\") : \"\") +\n                    (self.security && !self.security.postProcess ? self.security.toXML() : \"\") +\n                    \"</\" + envelopeKey + \":Header>\")\n                :\n                    '') +\n            \"<\" + envelopeKey + \":Body\" +\n            (this.bodyAttributes ? this.bodyAttributes.join(' ') : '') +\n            (this.security && this.security.postProcess ? ' Id=\"_0\"' : '') +\n            \">\" +\n            message +\n            \"</\" + envelopeKey + \":Body>\" +\n            \"</\" + envelopeKey + \":Envelope>\";\n        if (self.security && self.security.postProcess) {\n            xml = self.security.postProcess(xml, envelopeKey);\n        }\n        this.lastMessage = message;\n        this.lastRequest = xml;\n        this.lastEndpoint = location;\n        var eid = options.exchangeId || uuid.v4();\n        var tryJSONparse = function (body) {\n            try {\n                return JSON.parse(body);\n            }\n            catch (err) {\n                return undefined;\n            }\n        };\n        callback(null, location, headers, xml);\n    };\n    return Client;\n}());\nexport { Client };\n//# sourceMappingURL=client.js.map","import { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { createSoapClient } from \"./libts/soap\";\nvar SOAPService = (function () {\n    function SOAPService() {\n    }\n    SOAPService.prototype.createClient = function (wsdlDef, options) {\n        if (options === void 0) { options = {}; }\n        return createSoapClient(wsdlDef, options);\n    };\n    return SOAPService;\n}());\nexport { SOAPService };\nSOAPService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nSOAPService.ctorParameters = function () { return []; };\n//# sourceMappingURL=soap.service.js.map","import { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { SOAPService } from './soap.service';\nvar NgxSoapModule = (function () {\n    function NgxSoapModule() {\n    }\n    return NgxSoapModule;\n}());\nexport { NgxSoapModule };\nNgxSoapModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [HttpModule],\n                providers: [SOAPService]\n            },] },\n];\n/** @nocollapse */\nNgxSoapModule.ctorParameters = function () { return []; };\n//# sourceMappingURL=ngx-soap.module.js.map","import * as _ from 'lodash';\nvar BasicAuthSecurity = (function () {\n    function BasicAuthSecurity(username, password, defaults) {\n        this._username = username;\n        this._password = password;\n        this.defaults = {};\n        _.merge(this.defaults, defaults);\n    }\n    BasicAuthSecurity.prototype.addHeaders = function (headers) {\n        headers['Authorization'] = 'Basic ' + btoa(this._username + ':' + this._password);\n        return headers;\n    };\n    BasicAuthSecurity.prototype.toXML = function () {\n        return '';\n    };\n    BasicAuthSecurity.prototype.addOptions = function (options) {\n        _.merge(options, this.defaults);\n    };\n    return BasicAuthSecurity;\n}());\nexport { BasicAuthSecurity };\n//# sourceMappingURL=basic-auth-security.js.map"],"names":["findPrefix","xmlnsMapping","nsURI","n","TNS_PREFIX","appendColon","ns","charAt","length","noColonNameSpace","substring","splitQName","nsName","prefix","name","i","indexOf","xmlEscape","obj","substr","replace","trim","text","trimLeft","trimRight","openWsdl","wsdlDef","options","Promise","resolve","reject","WSDL","build","createSoapClient","wsdl","then","Client","catch","err","Error","NamespaceScope","parent","this","namespaces","prototype","getNamespaceURI","localOnly","nsUri","uri","getNamespaceMapping","declared","mapping","getPrefix","p","NamespaceContext","registerNamespace","prefixCount","addNamespace","scopes","pushContext","currentScope","scope","push","popContext","pop","declareNamespace","__extends","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","hasOwnProperty","__","constructor","create","stripBom","x","charCodeAt","slice","Primitives","string","boolean","decimal","float","double","anyType","byte","int","long","short","negativeInteger","nonNegativeInteger","positiveInteger","nonPositiveInteger","unsignedByte","unsignedInt","unsignedLong","unsignedShort","duration","dateTime","time","date","gYearMonth","gYear","gMonthDay","gDay","gMonth","hexBinary","base64Binary","anyURI","QName","NOTATION","definition","ignoredNamespaces","ignoreBaseNameSpaces","valueKey","xmlKey","describeServices","services","service","description","definitions","findSchemaObject","qname","def","schemas","schema","complexTypes","types","elements","_includesWsdl","_initializeOptions","_this","_fromXML","processIncludes","deleteFixedAttrs","postProcess","bindings","bindingName","binding","style","methods","topEls","topElements","methodName","input","inputName","$name","outputName","output","xmlnsInEnvelope","_xmlnsMap","console","log","includes","concat","_processNextInclude","toXML","xml","objectToXML","nsPrefix","isFirst","xmlnsAttr","schemaObject","nsContext","self","parentNsPrefix","undefined","current","isIgnoredNameSpace","soapHeader","qualified","$elementFormDefault","parts","prefixNamespace","xmlnsAttrib","overrideRootElement","xmlnsAttributes","forEach","attribute","value","namespace","isArray","item","arrayAttr","processAttributes","correctOuterNsPrefix","join","attributesKey","child","attr","nonSubNameSpace","emptyNonSubNameSpace","nameWithNsRegex","exec","childSchemaObject","findChildSchemaObject","$type","$ref","childNsURI","childNsPrefix","childName","childXmlnsAttrib","elementQName","$targetNamespace","xmlns","unqualified","targetNamespace","$form","resolvedChildSchemaObject","typeQName","typePrefix","typeURI","findSchemaType","$baseNameSpace","xsi_type","type","objectToRpcXML","params","isParts","defs","key","prefixedKey","objectToDocumentXML","args","parameterTypeObj","filterOutIgnoredNameSpace","attrObj","xsiType","attrKey","attrValue","backtrace","found","$lookupTypes","typeObj","object","typeInfo","typeDef","children","$base","baseQName","childNameSpace","foundBase","xmlToObject","callback","finish","refs","ref","hrefs","_.assign","root","Envelope","body","Body","Fault","code","faultcode","$value","faultstring","detail","message","error","id","sax.parser","objectName","stack","Header","Security","UsernameToken","Username","Password","onopentag","node","attributeName","attrs","attributes","top","topSchema","elementAttributes","hasNonXmlnsAttribute","hasNilAttribute","originalName","messages","isInput","test","portTypes","portType","keys","href","par","res","xsiTypeSchema","nil","onclosetag","cur","topObject","split","_.isPlainObject","oncdata","ontext","onerror","e","resume","statusCode","customDeserializer","parseInt","toLowerCase","Date","saxStream","sax.createStream","on","pipe","r","write","close","_originalIgnoredNamespaces","override","escapeXML","wsdl_headers","wsdl_options","httpClient","forceSoap12Headers","_parse","descriptions","startElement","strict","Element","DefinitionsElement","TypesElement","SchemaElement","addChild","endElement","str","alias","allowedChildren","ports","match","ChildClass","ElementTypeMap","unexpected","_.defaultsDeep","init","MessageElement","_super","call","element","desc","part","$element","elementChildren","lookupTypes","targetNSAlias","$lookupType","_getNestedLookupTypeString","filter","schemaXmlns","_createLookupTypeObject","typeNs","ctype","method","splice","schemaDefinition","nsString","splittedNSString","nsAlias","splittedName","lookupTypeObj","$namespace","resolvedType","excluded","resolvedChildType","merge","source","_.merge","location","$schemaLocation","$location","ElementElement","isMany","$maxOccurs","isNaN","$minOccurs","typeName","typeElement","elem","ComplexTypeElement","AnyElement","sequence","InputElement","use","$use","encodingStyle","$encodingStyle","OutputElement","SimpleTypeElement","RestrictionElement","SequenceElement","ChoiceElement","getBase","map","ExtensionElement","base","choice","EnumerationElement","AllElement","SimpleContentElement","ComplexContentElement","OperationElement","inputSoap","outputSoap","soapAction","$soapAction","$style","tag","messageName","$message","inputDesc","outputDesc","PortTypeElement","BindingElement","transport","$transport","PortElement","ServiceElement","$binding","port","DocumentationElement","any","simpleType","restriction","extension","enumeration","complexType","complexContent","simpleContent","all","operation","fault","documentation","endpoint","httpHeaders","_initializeServices","addSoapHeader","soapHeaders","changeSoapHeader","index","getSoapHeaders","clearSoapHeaders","addHttpHeader","getHttpHeaders","clearHttpHeaders","addBodyAttribute","bodyAttribute","bodyAttributes","composition","getOwnPropertyNames","prop","idx","array","getBodyAttributes","clearBodyAttributes","setEndpoint","setSecurity","security","setSOAPAction","SOAPAction","describe","parseResponseBody","_defineService","streamAllowed","stream","envelopeKey","_definePort","_defineMethod","temp","extraHeaders","_invoke","url","headers","encoding","xmlnsSoap","lastIndexOf","header","addHeaders","addOptions","assert.ok","lastMessage","lastRequest","lastEndpoint","exchangeId","uuid.v4","SOAPService","createClient","decorators","Injectable","ctorParameters","NgxSoapModule","NgModule","imports","HttpModule","providers","BasicAuthSecurity","username","password","defaults","_username","_password","btoa"],"mappings":"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"}