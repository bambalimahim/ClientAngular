{"version":3,"sources":["../../src/ngx-soap.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAA,EAAS,MAAO,eAAA,CAAgB;AACzC,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,WAAA,EAAY,MAAO,gBAAA,CAAiB;AAG7C;IAAA;IASA,CAAC;IAAD,oBAAC;AAAD,CATA,AASC;;AATmC,wBAAU,GAA0B;IACxE,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACvB,OAAO,EAAE,CAAE,UAAU,CAAE;gBACvB,SAAS,EAAE,CAAE,WAAW,CAAE;aAC3B,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"ngx-soap.module.js","sourceRoot":"","sourcesContent":["import { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { SOAPService } from './soap.service';\n\n\nexport class NgxSoapModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [ HttpModule ],\n  providers: [ SOAPService ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}