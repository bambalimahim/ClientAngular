{"version":3,"sources":["../../../src/libts/nscontext.ts"],"names":[],"mappings":"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","file":"nscontext.js","sourceRoot":"","sourcesContent":["export class NamespaceScope {\n  namespaces: any = {};\n  parent: any;\n\n  /**\n   * Scope for XML namespaces\n   * @param {NamespaceScope} [parent] Parent scope\n   * @returns {NamespaceScope}\n   * @constructor\n   */\n  constructor(parent: any) {\n    if (!(this instanceof NamespaceScope)) {\n      return new NamespaceScope(parent);\n    }\n    this.parent = parent;\n    this.namespaces = {};\n  }\n\n  /**\n   * Look up the namespace URI by prefix\n   * @param {String} prefix Namespace prefix\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace URI\n   */\n  getNamespaceURI(prefix: any, localOnly: any) {\n    switch (prefix) {\n      case 'xml':\n        return 'http://www.w3.org/XML/1998/namespace';\n      case 'xmlns':\n        return 'http://www.w3.org/2000/xmlns/';\n      default:\n        var nsUri = this.namespaces[prefix];\n        /*jshint -W116 */\n        if (nsUri != null) {\n          return nsUri.uri;\n        } else if (!localOnly && this.parent) {\n          return this.parent.getNamespaceURI(prefix);\n        } else {\n          return null;\n        }\n    }\n  }\n\n  getNamespaceMapping(prefix: any) {\n    switch (prefix) {\n      case 'xml':\n        return {\n          uri: 'http://www.w3.org/XML/1998/namespace',\n          prefix: 'xml',\n          declared: true\n        };\n      case 'xmlns':\n        return {\n          uri: 'http://www.w3.org/2000/xmlns/',\n          prefix: 'xmlns',\n          declared: true\n        };\n      default:\n        var mapping = this.namespaces[prefix];\n        /*jshint -W116 */\n        if (mapping != null) {\n          return mapping;\n        } else if (this.parent) {\n          return this.parent.getNamespaceMapping(prefix);\n        } else {\n          return null;\n        }\n    }\n  }\n\n  /**\n   * Look up the namespace prefix by URI\n   * @param {String} nsUri Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace prefix\n   */\n  getPrefix(nsUri: any, localOnly: any) {\n    switch (nsUri) {\n      case 'http://www.w3.org/XML/1998/namespace':\n        return 'xml';\n      case 'http://www.w3.org/2000/xmlns/':\n        return 'xmlns';\n      default:\n        for (var p in this.namespaces) {\n          if (this.namespaces[p].uri === nsUri) {\n            return p;\n          }\n        }\n        if (!localOnly && this.parent) {\n          return this.parent.getPrefix(nsUri);\n        } else {\n          return null;\n        }\n    }\n  }\n}\n\n/**\n * Namespace context that manages hierarchical scopes\n * @returns {NamespaceContext}\n * @constructor\n */\nexport class NamespaceContext {\n  currentScope: any;\n  prefixCount: number;\n  scopes: any[];\n\n  constructor() {\n    // if (!(this instanceof NamespaceContext)) {\n    //   return new NamespaceContext();\n    // }\n    this.scopes = [];\n    this.pushContext();\n    this.prefixCount = 0;\n  }\n\n  /**\n * Add a prefix/URI namespace mapping\n * @param {String} prefix Namespace prefix\n * @param {String} nsUri Namespace URI\n * @param {Boolean} [localOnly] Search current scope only\n * @returns {boolean} true if the mapping is added or false if the mapping\n * already exists\n */\n  addNamespace(prefix: any, nsUri: any, localOnly: any) {\n    if (this.getNamespaceURI(prefix, localOnly) === nsUri) {\n      return false;\n    }\n    if (this.currentScope) {\n      this.currentScope.namespaces[prefix] = {\n        uri: nsUri,\n        prefix: prefix,\n        declared: false\n      };\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Push a scope into the context\n   * @returns {NamespaceScope} The current scope\n   */\n  pushContext(): NamespaceScope {\n    var scope = new NamespaceScope(this.currentScope);\n    this.scopes.push(scope);\n    this.currentScope = scope;\n    return scope;\n  }\n\n  /**\n * Pop a scope out of the context\n * @returns {NamespaceScope} The removed scope\n */\n  popContext() {\n    var scope = this.scopes.pop();\n    if (scope) {\n      this.currentScope = scope.parent;\n    } else {\n      this.currentScope = null;\n    }\n    return scope;\n  }\n\n  /**\n   * Look up the namespace URI by prefix\n   * @param {String} prefix Namespace prefix\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace URI\n   */\n  getNamespaceURI(prefix: any, localOnly: any) {\n    return this.currentScope && this.currentScope.getNamespaceURI(prefix, localOnly);\n  }\n\n  /**\n * Look up the namespace prefix by URI\n * @param {String} nsURI Namespace URI\n * @param {Boolean} [localOnly] Search current scope only\n * @returns {String} Namespace prefix\n */\n  getPrefix(nsUri: any, localOnly: any) {\n    return this.currentScope && this.currentScope.getPrefix(nsUri, localOnly);\n  }\n\n  /**\n   * Register a namespace\n   * @param {String} nsUri Namespace URI\n   * @returns {String} The matching or generated namespace prefix\n   */\n  registerNamespace = function (nsUri: any) {\n    var prefix = this.getPrefix(nsUri);\n    if (prefix) {\n      // If the namespace has already mapped to a prefix\n      return prefix;\n    } else {\n      // Try to generate a unique namespace\n      while (true) {\n        prefix = 'ns' + (++this.prefixCount);\n        if (!this.getNamespaceURI(prefix)) {\n          // The prefix is not used\n          break;\n        }\n      }\n    }\n    this.addNamespace(prefix, nsUri, true);\n    return prefix;\n  }\n\n  /**\n   * Declare a namespace prefix/uri mapping\n   * @param {String} prefix Namespace prefix\n   * @param {String} nsUri Namespace URI\n   * @returns {Boolean} true if the declaration is created\n   */\n  declareNamespace(prefix: any, nsUri: any) {\n    if (this.currentScope) {\n      var mapping = this.currentScope.getNamespaceMapping(prefix);\n      if (mapping && mapping.uri === nsUri && mapping.declared) {\n        return false;\n      }\n      this.currentScope.namespaces[prefix] = {\n        uri: nsUri,\n        prefix: prefix,\n        declared: true\n      };\n      return true;\n    }\n    return false;\n  }\n}"]}