{"version":3,"sources":["../../../src/libts/wsdl.ts"],"names":[],"mappings":"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","file":"wsdl.js","sourceRoot":"","sourcesContent":["import * as _ from 'lodash';\nimport * as sax from 'sax';\nimport { resolve as resolveUrl } from \"url\";\nimport { TNS_PREFIX, findPrefix } from './utils';\nimport { NamespaceContext } from \"./nscontext\";\n\nconst stripBom = (x: string): string => {\n  // Catches EFBBBF (UTF-8 BOM) because the buffer-to-string\n  // conversion translates it to FEFF (UTF-16 BOM)\n  if (x.charCodeAt(0) === 0xFEFF) {\n    return x.slice(1);\n  }\n\n  return x;\n}\n\nconst Primitives = {\n  string: 1,\n  boolean: 1,\n  decimal: 1,\n  float: 1,\n  double: 1,\n  anyType: 1,\n  byte: 1,\n  int: 1,\n  long: 1,\n  short: 1,\n  negativeInteger: 1,\n  nonNegativeInteger: 1,\n  positiveInteger: 1,\n  nonPositiveInteger: 1,\n  unsignedByte: 1,\n  unsignedInt: 1,\n  unsignedLong: 1,\n  unsignedShort: 1,\n  duration: 0,\n  dateTime: 0,\n  time: 0,\n  date: 0,\n  gYearMonth: 0,\n  gYear: 0,\n  gMonthDay: 0,\n  gDay: 0,\n  gMonth: 0,\n  hexBinary: 0,\n  base64Binary: 0,\n  anyURI: 0,\n  QName: 0,\n  NOTATION: 0\n};\n\nconst trimLeft = /^[\\s\\xA0]+/;\nconst trimRight = /[\\s\\xA0]+$/;\n\nfunction appendColon(ns: string) {\n  return (ns && ns.charAt(ns.length - 1) !== ':') ? ns + ':' : ns;\n}\n\nfunction noColonNameSpace(ns: string) {\n  return (ns && ns.charAt(ns.length - 1) === ':') ? ns.substring(0, ns.length - 1) : ns;\n}\n\nfunction splitQName(nsName: string) {\n  if(typeof nsName !== 'string') return {\n    prefix: '',\n    name: nsName\n  };\n\n  var i = nsName.indexOf(':');\n  return i < 0 ? { prefix: TNS_PREFIX, name: nsName } :\n    { prefix: nsName.substring(0, i), name: nsName.substring(i + 1) };\n}\n\nfunction xmlEscape(obj: any) {\n  if (typeof (obj) === 'string') {\n    if (obj.substr(0, 9) === '<![CDATA[' && obj.substr(-3) === \"]]>\") {\n      return obj;\n    }\n    return obj\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;');\n  }\n\n  return obj;\n}\n\nfunction trim(text: string) {\n  return text.replace(trimLeft, '').replace(trimRight, '');\n}\n\nfunction deepMerge(destination: any, source: any) {\n  return _.merge(destination || {}, source, (a: any, b: any) => {\n    return _.isArray(a) ? a.concat(b) : undefined;\n  });\n}\n\nexport function openWsdl(wsdlDef: string, options: any = {}): Promise<WSDL> {\n  return new Promise((resolve, reject) => {\n    let wsdl = new WSDL(wsdlDef, options);\n    resolve(wsdl.build());\n  });\n}\n\nexport class WSDL {\n  xml: any;\n  services: any[];\n  definition: any; //WSDL definition: string or service definition\n  definitions: any; //WSDLElement type?\n  _originalIgnoredNamespaces: any;\n  options: any = {};\n\n  _includesWsdl: any[];\n  // uri: any;\n  ignoredNamespaces = ['tns', 'targetNamespace', 'typedNamespace'];\n  ignoreBaseNameSpaces = false;\n  valueKey = '$value';\n  xmlKey = '$xml';\n  xmlnsInEnvelope: any;\n\n  constructor(definition: string, options: any) {\n    this.definition = definition;\n    // this.uri = uri;\n    this._includesWsdl = [];\n    this._initializeOptions(options);\n  }\n\n  build(): Promise<any> {\n    return this._fromXML(stripBom(this.definition))\n      .then(() => this.processIncludes())\n      .then(definitions => {\n        var name;\n        this.definitions = definitions;\n\n        this.definitions.deleteFixedAttrs();\n        var services = this.services = this.definitions.services;\n        if (services) {\n          for (name in services) {\n            services[name].postProcess(this.definitions);\n          }\n        }\n        var complexTypes = this.definitions.complexTypes;\n        if (complexTypes) {\n          for (name in complexTypes) {\n            complexTypes[name].deleteFixedAttrs();\n          }\n        }\n\n        // for document style, for every binding, prepare input message element name to (methodName, output message element name) mapping\n        var bindings = this.definitions.bindings;\n        for (var bindingName in bindings) {\n          var binding = bindings[bindingName];\n          if (typeof binding.style === 'undefined') {\n            binding.style = 'document';\n          }\n          if (binding.style !== 'document') continue;\n          var methods = binding.methods;\n          var topEls: any = binding.topElements = {};\n          for (var methodName in methods) {\n            if (methods[methodName].input) {\n              var inputName = methods[methodName].input.$name;\n              var outputName = \"\";\n              if (methods[methodName].output)\n                outputName = methods[methodName].output.$name;\n              topEls[inputName] = { \"methodName\": methodName, \"outputName\": outputName };\n            }\n          }\n        }\n\n        this.xmlnsInEnvelope = this._xmlnsMap();\n\n        return this;\n      })\n      .catch(err => console.log(\"Build error\", err));\n  }\n\n  processIncludes(): Promise<any> {\n    var schemas = this.definitions.schemas;\n    var includes: any[] = [];\n\n    for (var ns in schemas) {\n      var schema = schemas[ns];\n      includes = includes.concat(schema.includes || []);\n    }\n\n    return this._processNextInclude(includes);\n  }\n\n  describeServices = function () {\n    var services: any = {};\n    for (var name in this.services) {\n      var service = this.services[name];\n      services[name] = service.description(this.definitions);\n    }\n    return services;\n  }\n\n  toXML(): string {\n    return this.xml || '';\n  }\n\n  objectToXML(obj: any, name: any, nsPrefix: any, nsURI: any, isFirst: any = {}, xmlnsAttr: any = {}, schemaObject?: any, nsContext?: any): string {\n    var self = this;\n    var schema = this.definitions.schemas[nsURI];\n\n    var parentNsPrefix = nsPrefix ? nsPrefix.parent : undefined;\n    if (typeof parentNsPrefix !== 'undefined') {\n      //we got the parentNsPrefix for our array. setting the namespace-variable back to the current namespace string\n      nsPrefix = nsPrefix.current;\n    }\n\n    parentNsPrefix = noColonNameSpace(parentNsPrefix);\n    if (this.isIgnoredNameSpace(parentNsPrefix)) {\n      parentNsPrefix = '';\n    }\n\n    var soapHeader = !schema;\n    var qualified = schema && schema.$elementFormDefault === 'qualified';\n    var parts = [];\n    var prefixNamespace = (nsPrefix || qualified) && nsPrefix !== TNS_PREFIX;\n\n    var xmlnsAttrib = '';\n    if (nsURI && isFirst) {\n      if (self.options.overrideRootElement && self.options.overrideRootElement.xmlnsAttributes) {\n        self.options.overrideRootElement.xmlnsAttributes.forEach(function (attribute: any) {\n          xmlnsAttrib += ' ' + attribute.name + '=\"' + attribute.value + '\"';\n        });\n      } else {\n        if (prefixNamespace && !this.isIgnoredNameSpace(nsPrefix)) {\n          // resolve the prefix namespace\n          xmlnsAttrib += ' xmlns:' + nsPrefix + '=\"' + nsURI + '\"';\n        }\n        // only add default namespace if the schema elementFormDefault is qualified\n        if (qualified || soapHeader) xmlnsAttrib += ' xmlns=\"' + nsURI + '\"';\n      }\n    }\n\n    if (!nsContext) {\n      nsContext = new NamespaceContext();\n      nsContext.declareNamespace(nsPrefix, nsURI);\n    } else {\n      nsContext.pushContext();\n    }\n\n    // explicitly use xmlns attribute if available\n    if (xmlnsAttr && !(self.options.overrideRootElement && self.options.overrideRootElement.xmlnsAttributes)) {\n      xmlnsAttrib = xmlnsAttr;\n    }\n\n    var ns: any = '';\n\n    if (self.options.overrideRootElement && isFirst) {\n      ns = self.options.overrideRootElement.namespace;\n    } else if (prefixNamespace && (qualified || isFirst || soapHeader) && !this.isIgnoredNameSpace(nsPrefix)) {\n      ns = nsPrefix;\n    }\n\n    var i, n;\n    // start building out XML string.\n    if (Array.isArray(obj)) {\n      for (i = 0, n = obj.length; i < n; i++) {\n        var item = obj[i];\n        var arrayAttr = self.processAttributes(item, nsContext),\n          correctOuterNsPrefix = parentNsPrefix || ns; //using the parent namespace prefix if given\n\n        parts.push(['<', appendColon(correctOuterNsPrefix), name, arrayAttr, xmlnsAttrib, '>'].join(''));\n        parts.push(self.objectToXML(item, name, nsPrefix, nsURI, false, null, schemaObject, nsContext));\n        parts.push(['</', appendColon(correctOuterNsPrefix), name, '>'].join(''));\n      }\n    } else if (typeof obj === 'object') {\n      for (name in obj) {\n        if (!obj.hasOwnProperty(name)) continue;\n        //don't process attributes as element\n        if (name === self.options.attributesKey) {\n          continue;\n        }\n        //Its the value of a xml object. Return it directly.\n        if (name === self.options.xmlKey) {\n          nsContext.popContext();\n          return obj[name];\n        }\n        //Its the value of an item. Return it directly.\n        if (name === self.options.valueKey) {\n          nsContext.popContext();\n          return xmlEscape(obj[name]);\n        }\n\n        var child = obj[name];\n        if (typeof child === 'undefined') {\n          continue;\n        }\n\n        var attr = self.processAttributes(child, nsContext);\n\n        var value = '';\n        var nonSubNameSpace = '';\n        var emptyNonSubNameSpace = false;\n\n        var nameWithNsRegex = /^([^:]+):([^:]+)$/.exec(name);\n        if (nameWithNsRegex) {\n          nonSubNameSpace = nameWithNsRegex[1] + ':';\n          name = nameWithNsRegex[2];\n        } else if (name[0] === ':') {\n          emptyNonSubNameSpace = true;\n          name = name.substr(1);\n        }\n\n        if (isFirst) {\n          value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, schemaObject, nsContext);\n        } else {\n\n          if (self.definitions.schemas) {\n            if (schema) {\n              var childSchemaObject = self.findChildSchemaObject(schemaObject, name);\n              //find sub namespace if not a primitive\n              if (childSchemaObject &&\n                ((childSchemaObject.$type && (childSchemaObject.$type.indexOf('xsd:') === -1)) ||\n                  childSchemaObject.$ref || childSchemaObject.$name)) {\n                /*if the base name space of the children is not in the ingoredSchemaNamspaces we use it.\n                 This is because in some services the child nodes do not need the baseNameSpace.\n                 */\n\n                var childNsPrefix: any = '';\n                var childName: any = '';\n                var childNsURI: any;\n                var childXmlnsAttrib: any = '';\n\n                var elementQName = childSchemaObject.$ref || childSchemaObject.$name;\n                if (elementQName) {\n                  elementQName = splitQName(elementQName);\n                  childName = elementQName.name;\n                  if (elementQName.prefix === TNS_PREFIX) {\n                    // Local element\n                    childNsURI = childSchemaObject.$targetNamespace;\n                    childNsPrefix = nsContext.registerNamespace(childNsURI);\n                    if (this.isIgnoredNameSpace(childNsPrefix)) {\n                      childNsPrefix = nsPrefix;\n                    }\n                  } else {\n                    childNsPrefix = elementQName.prefix;\n                    if (this.isIgnoredNameSpace(childNsPrefix)) {\n                      childNsPrefix = nsPrefix;\n                    }\n                    childNsURI = schema.xmlns[childNsPrefix] || self.definitions.xmlns[childNsPrefix];\n                  }\n\n                  var unqualified = false;\n                  // Check qualification form for local elements\n                  if (childSchemaObject.$name && childSchemaObject.targetNamespace === undefined) {\n                    if (childSchemaObject.$form === 'unqualified') {\n                      unqualified = true;\n                    } else if (childSchemaObject.$form === 'qualified') {\n                      unqualified = false;\n                    } else {\n                      unqualified = schema.$elementFormDefault !== 'qualified';\n                    }\n                  }\n                  if (unqualified) {\n                    childNsPrefix = '';\n                  }\n\n                  if (childNsURI && childNsPrefix) {\n                    if (nsContext.declareNamespace(childNsPrefix, childNsURI)) {\n                      childXmlnsAttrib = ' xmlns:' + childNsPrefix + '=\"' + childNsURI + '\"';\n                      xmlnsAttrib += childXmlnsAttrib;\n                    }\n                  }\n                }\n\n                var resolvedChildSchemaObject;\n                if (childSchemaObject.$type) {\n                  var typeQName = splitQName(childSchemaObject.$type);\n                  var typePrefix = typeQName.prefix;\n                  var typeURI = schema.xmlns[typePrefix] || self.definitions.xmlns[typePrefix];\n                  childNsURI = typeURI;\n                  if (typeURI !== 'http://www.w3.org/2001/XMLSchema' && typePrefix !== TNS_PREFIX) {\n                    // Add the prefix/namespace mapping, but not declare it\n                    nsContext.addNamespace(typePrefix, typeURI);\n                  }\n                  resolvedChildSchemaObject =\n                    self.findSchemaType(typeQName.name, typeURI) || childSchemaObject;\n                } else {\n                  resolvedChildSchemaObject =\n                    self.findSchemaObject(childNsURI, childName) || childSchemaObject;\n                }\n\n                if (childSchemaObject.$baseNameSpace && this.options.ignoreBaseNameSpaces) {\n                  childNsPrefix = nsPrefix;\n                  childNsURI = nsURI;\n                }\n\n                if (this.options.ignoreBaseNameSpaces) {\n                  childNsPrefix = '';\n                  childNsURI = '';\n                }\n\n                ns = childNsPrefix;\n\n                if (Array.isArray(child)) {\n                  //for arrays, we need to remember the current namespace\n                  childNsPrefix = {\n                    current: childNsPrefix,\n                    parent: ns\n                  };\n                } else {\n                  //parent (array) already got the namespace\n                  childXmlnsAttrib = null;\n                }\n\n                value = self.objectToXML(child, name, childNsPrefix, childNsURI,\n                  false, childXmlnsAttrib, resolvedChildSchemaObject, nsContext);\n              } else if (obj[self.options.attributesKey] && obj[self.options.attributesKey].xsi_type) {\n                //if parent object has complex type defined and child not found in parent\n                var completeChildParamTypeObject = self.findChildSchemaObject(\n                  obj[self.options.attributesKey].xsi_type.type,\n                  obj[self.options.attributesKey].xsi_type.xmlns);\n\n                nonSubNameSpace = obj[self.options.attributesKey].xsi_type.prefix;\n                nsContext.addNamespace(obj[self.options.attributesKey].xsi_type.prefix,\n                  obj[self.options.attributesKey].xsi_type.xmlns);\n                value = self.objectToXML(child, name, obj[self.options.attributesKey].xsi_type.prefix,\n                  obj[self.options.attributesKey].xsi_type.xmlns, false, null, null, nsContext);\n              } else {\n                if (Array.isArray(child)) {\n                  name = nonSubNameSpace + name;\n                }\n\n                value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, null, nsContext);\n              }\n            } else {\n              value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, null, nsContext);\n            }\n          }\n        }\n\n        ns = noColonNameSpace(ns);\n        if (prefixNamespace && !qualified && isFirst && !self.options.overrideRootElement) {\n          ns = nsPrefix;\n        } else if (this.isIgnoredNameSpace(ns)) {\n          ns = '';\n        }\n\n        if (!Array.isArray(child)) {\n          // start tag\n          parts.push(['<', emptyNonSubNameSpace ? '' : appendColon(nonSubNameSpace || ns), name, attr, xmlnsAttrib,\n            (child === null ? ' xsi:nil=\"true\"' : ''), '>'].join(''));\n        }\n        parts.push(value);\n        if (!Array.isArray(child)) {\n          // end tag\n          parts.push(['</', emptyNonSubNameSpace ? '' : appendColon(nonSubNameSpace || ns), name, '>'].join(''));\n        }\n      }\n    } else if (obj !== undefined) {\n      parts.push((self.options.escapeXML) ? xmlEscape(obj) : obj);\n    }\n    nsContext.popContext();\n    return parts.join('');\n  }\n\n  /**\n * Create RPC style xml string from the parameters\n * @param {string} name\n * @param {*} params\n * @param {string} nsPrefix\n * @param {string} nsURI\n * @param {boolean} isParts\n * @returns {string}\n */\n  objectToRpcXML(name: string, params: any, nsPrefix: any, nsURI: string, isParts: boolean): string {\n    var parts = [];\n    var defs = this.definitions;\n    var nsAttrName = '_xmlns';\n\n    nsPrefix = nsPrefix || findPrefix(defs.xmlns, nsURI);\n\n    nsURI = nsURI || defs.xmlns[nsPrefix];\n    nsPrefix = nsPrefix === TNS_PREFIX ? '' : (nsPrefix + ':');\n\n    parts.push(['<', nsPrefix, name, '>'].join(''));\n\n    for (var key in params) {\n      if (!params.hasOwnProperty(key)) {\n        continue;\n      }\n      if (key !== nsAttrName) {\n        var value = params[key];\n        var prefixedKey = (isParts ? '' : nsPrefix) + key;\n        parts.push(['<', prefixedKey, '>'].join(''));\n        parts.push((typeof value === 'object') ? this.objectToXML(value, key, nsPrefix, nsURI) : xmlEscape(value));\n        parts.push(['</', prefixedKey, '>'].join(''));\n      }\n    }\n    parts.push(['</', nsPrefix, name, '>'].join(''));\n    return parts.join('');\n  }\n\n  /**\n * Create document style xml string from the parameters\n * @param {String} name\n * @param {*} params\n * @param {String} nsPrefix\n * @param {String} nsURI\n * @param {String} type\n */\n  objectToDocumentXML(name: string, params: any, nsPrefix: string, nsURI: string, type: string) {\n    var args: any = {};\n    args[name] = params;\n    var parameterTypeObj = type ? this.findSchemaObject(nsURI, type) : null;\n    return this.objectToXML(args, null, nsPrefix, nsURI, true, null, parameterTypeObj);\n  }\n\n  isIgnoredNameSpace(ns: string) {\n    return this.options.ignoredNamespaces.indexOf(ns) > -1;\n  }\n\n  filterOutIgnoredNameSpace(ns: string) {\n    var namespace = noColonNameSpace(ns);\n    return this.isIgnoredNameSpace(namespace) ? '' : namespace;\n  }\n\n  processAttributes(child: any, nsContext: any) {\n    var attr = '';\n\n    if (child === null) {\n      child = [];\n    }\n\n    var attrObj = child[this.options.attributesKey];\n    if (attrObj && attrObj.xsi_type) {\n      var xsiType = attrObj.xsi_type;\n\n      var prefix = xsiType.prefix || xsiType.namespace;\n      // Generate a new namespace for complex extension if one not provided\n      if (!prefix) {\n        prefix = nsContext.registerNamespace(xsiType.xmlns);\n      } else {\n        nsContext.declareNamespace(prefix, xsiType.xmlns);\n      }\n      xsiType.prefix = prefix;\n    }\n\n\n    if (attrObj) {\n      for (var attrKey in attrObj) {\n        //handle complex extension separately\n        if (attrKey === 'xsi_type') {\n          var attrValue = attrObj[attrKey];\n          attr += ' xsi:type=\"' + attrValue.prefix + ':' + attrValue.type + '\"';\n          attr += ' xmlns:' + attrValue.prefix + '=\"' + attrValue.xmlns + '\"';\n\n          continue;\n        } else {\n          attr += ' ' + attrKey + '=\"' + xmlEscape(attrObj[attrKey]) + '\"';\n        }\n      }\n    }\n\n    return attr;\n  }\n\n  findSchemaType(name: any, nsURI: any) {\n    if (!this.definitions.schemas || !name || !nsURI) {\n      return null;\n    }\n\n    var schema = this.definitions.schemas[nsURI];\n    if (!schema || !schema.complexTypes) {\n      return null;\n    }\n\n    return schema.complexTypes[name];\n  }\n\n  findChildSchemaObject(parameterTypeObj: any, childName: any, backtrace: any = []): any {\n    if (!parameterTypeObj || !childName) {\n      return null;\n    }\n\n    if (!backtrace) {\n      backtrace = [];\n    }\n\n    if (backtrace.indexOf(parameterTypeObj) >= 0) {\n      // We've recursed back to ourselves; break.\n      return null;\n    } else {\n      backtrace = backtrace.concat([parameterTypeObj]);\n    }\n\n    var found = null,\n      i = 0,\n      child,\n      ref;\n\n    if (Array.isArray(parameterTypeObj.$lookupTypes) && parameterTypeObj.$lookupTypes.length) {\n      var types = parameterTypeObj.$lookupTypes;\n\n      for (i = 0; i < types.length; i++) {\n        var typeObj = types[i];\n\n        if (typeObj.$name === childName) {\n          found = typeObj;\n          break;\n        }\n      }\n    }\n\n    var object = parameterTypeObj;\n    if (object.$name === childName && object.name === 'element') {\n      return object;\n    }\n    if (object.$ref) {\n      ref = splitQName(object.$ref);\n      if (ref.name === childName) {\n        return object;\n      }\n    }\n\n    var childNsURI;\n    if (object.$type) {\n      var typeInfo = splitQName(object.$type);\n      if (typeInfo.prefix === TNS_PREFIX) {\n        childNsURI = parameterTypeObj.$targetNamespace;\n      } else {\n        childNsURI = this.definitions.xmlns[typeInfo.prefix];\n      }\n      var typeDef = this.findSchemaType(typeInfo.name, childNsURI);\n      if (typeDef) {\n        return this.findChildSchemaObject(typeDef, childName, backtrace);\n      }\n    }\n\n    if (object.children) {\n      for (i = 0, child; child = object.children[i]; i++) {\n        found = this.findChildSchemaObject(child, childName, backtrace);\n        if (found) {\n          break;\n        }\n\n        if (child.$base) {\n          var baseQName = splitQName(child.$base);\n          var childNameSpace = baseQName.prefix === TNS_PREFIX ? '' : baseQName.prefix;\n          childNsURI = this.definitions.xmlns[baseQName.prefix];\n\n          var foundBase = this.findSchemaType(baseQName.name, childNsURI);\n\n          if (foundBase) {\n            found = this.findChildSchemaObject(foundBase, childName, backtrace);\n\n            if (found) {\n              found.$baseNameSpace = childNameSpace;\n              found.$type = childNameSpace + ':' + childName;\n              break;\n            }\n          }\n        }\n      }\n\n    }\n\n    if (!found && object.$name === childName) {\n      return object;\n    }\n\n    return found;\n  }\n\n  /**\n * Look up a XSD type or element by namespace URI and name\n * @param {String} nsURI Namespace URI\n * @param {String} qname Local or qualified name\n * @returns {*} The XSD type/element definition\n */\n  findSchemaObject = function (nsURI: string, qname: string): any {\n    if (!nsURI || !qname) {\n      return null;\n    }\n\n    var def = null;\n\n    if (this.definitions.schemas) {\n      var schema = this.definitions.schemas[nsURI];\n      if (schema) {\n        if (qname.indexOf(':') !== -1) {\n          qname = qname.substring(qname.indexOf(':') + 1, qname.length);\n        }\n\n        // if the client passed an input element which has a `$lookupType` property instead of `$type`\n        // the `def` is found in `schema.elements`.\n        def = schema.complexTypes[qname] || schema.types[qname] || schema.elements[qname];\n      }\n    }\n\n    return def;\n  }\n\n  xmlToObject(xml: any, callback?: any) {\n    var self = this;\n    // var p = typeof callback === 'function' ? {} : saxParser(true, {});\n    var p = sax.parser(true, {});\n    var objectName: any = null;\n    var root: any = {};\n    var schema: any = {\n      Envelope: {\n        Header: {\n          Security: {\n            UsernameToken: {\n              Username: 'string',\n              Password: 'string'\n            }\n          }\n        },\n        Body: {\n          Fault: {\n            faultcode: 'string',\n            faultstring: 'string',\n            detail: 'string'\n          }\n        }\n      }\n    };\n    var stack: any[] = [{ name: null, object: root, schema: schema }];\n    var xmlns: any = {};\n\n    var refs: any = {}, id; // {id:{hrefs:[],obj:}, ...}\n\n    p.onopentag = function (node: any) {\n      var nsName = node.name;\n      var attrs = node.attributes;\n\n      var name = splitQName(nsName).name,\n        attributeName,\n        top = stack[stack.length - 1],\n        topSchema = top.schema,\n        elementAttributes: any = {},\n        hasNonXmlnsAttribute = false,\n        hasNilAttribute = false,\n        obj: any = {};\n      var originalName = name;\n\n      if (!objectName && top.name === 'Body' && name !== 'Fault') {\n        var message = self.definitions.messages[name];\n        // Support RPC/literal messages where response body contains one element named\n        // after the operation + 'Response'. See http://www.w3.org/TR/wsdl#_names\n        if (!message) {\n          // Determine if this is request or response\n          var isInput = false;\n          var isOutput = false;\n          if ((/Response$/).test(name)) {\n            isOutput = true;\n            name = name.replace(/Response$/, '');\n          } else if ((/Request$/).test(name)) {\n            isInput = true;\n            name = name.replace(/Request$/, '');\n          } else if ((/Solicit$/).test(name)) {\n            isInput = true;\n            name = name.replace(/Solicit$/, '');\n          }\n          // Look up the appropriate message as given in the portType's operations\n          var portTypes = self.definitions.portTypes;\n          var portTypeNames = Object.keys(portTypes);\n          // Currently this supports only one portType definition.\n          var portType = portTypes[portTypeNames[0]];\n          if (isInput) {\n            name = portType.methods[name].input.$name;\n          } else {\n            name = portType.methods[name].output.$name;\n          }\n          message = self.definitions.messages[name];\n          // 'cache' this alias to speed future lookups\n          self.definitions.messages[originalName] = self.definitions.messages[name];\n        }\n\n        topSchema = message.description(self.definitions);\n        objectName = originalName;\n      }\n\n      if (attrs.href) {\n        id = attrs.href.substr(1);\n        if (!refs[id]) {\n          refs[id] = { hrefs: [], obj: null };\n        }\n        refs[id].hrefs.push({ par: top.object, key: name, obj: obj });\n      }\n      if (id = attrs.id) {\n        if (!refs[id]) {\n          refs[id] = { hrefs: [], obj: null };\n        }\n      }\n\n      //Handle element attributes\n      for (attributeName in attrs) {\n        if (/^xmlns:|^xmlns$/.test(attributeName)) {\n          xmlns[splitQName(attributeName).name] = attrs[attributeName];\n          continue;\n        }\n        hasNonXmlnsAttribute = true;\n        elementAttributes[attributeName] = attrs[attributeName];\n      }\n\n      for (attributeName in elementAttributes) {\n        var res = splitQName(attributeName);\n        if (res.name === 'nil' && xmlns[res.prefix] === 'http://www.w3.org/2001/XMLSchema-instance') {\n          hasNilAttribute = true;\n          break;\n        }\n      }\n\n      if (hasNonXmlnsAttribute) {\n        obj[self.options.attributesKey] = elementAttributes;\n      }\n\n      // Pick up the schema for the type specified in element's xsi:type attribute.\n      var xsiTypeSchema;\n      var xsiType = elementAttributes['xsi:type'];\n      if (xsiType) {\n        var type = splitQName(xsiType);\n        var typeURI;\n        if (type.prefix === TNS_PREFIX) {\n          // In case of xsi:type = \"MyType\"\n          typeURI = xmlns[type.prefix] || xmlns.xmlns;\n        } else {\n          typeURI = xmlns[type.prefix];\n        }\n        var typeDef = self.findSchemaObject(typeURI, type.name);\n        if (typeDef) {\n          xsiTypeSchema = typeDef.description(self.definitions);\n        }\n      }\n\n      if (topSchema && topSchema[name + '[]']) {\n        name = name + '[]';\n      }\n      stack.push({ name: originalName, object: obj, schema: (xsiTypeSchema || (topSchema && topSchema[name])), id: attrs.id, nil: hasNilAttribute });\n    };\n\n    p.onclosetag = function (nsName) {\n      var cur = stack.pop(),\n        obj = cur.object,\n        top = stack[stack.length - 1],\n        topObject = top.object,\n        topSchema = top.schema,\n        name = splitQName(nsName).name;\n\n      if (typeof cur.schema === 'string' && (cur.schema === 'string' || cur.schema.split(':')[1] === 'string')) {\n        if (typeof obj === 'object' && Object.keys(obj).length === 0) obj = cur.object = '';\n      }\n\n      if (cur.nil === true) {\n        return;\n      }\n\n      if (_.isPlainObject(obj) && !Object.keys(obj).length) {\n        obj = null;\n      }\n\n      if (topSchema && topSchema[name + '[]']) {\n        if (!topObject[name]) {\n          topObject[name] = [];\n        }\n        topObject[name].push(obj);\n      } else if (name in topObject) {\n        if (!Array.isArray(topObject[name])) {\n          topObject[name] = [topObject[name]];\n        }\n        topObject[name].push(obj);\n      } else {\n        topObject[name] = obj;\n      }\n\n      if (cur.id) {\n        refs[cur.id].obj = obj;\n      }\n    };\n\n    p.oncdata = function (text) {\n      text = trim(text);\n      if (!text.length) {\n        return;\n      }\n\n      if (/<\\?xml[\\s\\S]+\\?>/.test(text)) {\n        var top = stack[stack.length - 1];\n        var value = self.xmlToObject(text);\n        if (top.object[self.options.attributesKey]) {\n          top.object[self.options.valueKey] = value;\n        } else {\n          top.object = value;\n        }\n      } else {\n        p.ontext(text);\n      }\n    };\n\n    p.onerror = function (e) {\n      p.resume();\n      throw {\n        Fault: {\n          faultcode: 500,\n          faultstring: 'Invalid XML',\n          detail: new Error(e.message).message,\n          statusCode: 500\n        }\n      };\n    };\n\n    p.ontext = function (text) {\n      text = trim(text);\n      if (!text.length) {\n        return;\n      }\n\n      var top = stack[stack.length - 1];\n      var name = splitQName(top.schema).name,\n        value;\n      if (self.options && self.options.customDeserializer && self.options.customDeserializer[name]) {\n        value = self.options.customDeserializer[name](text, top);\n      }\n      else {\n        if (name === 'int' || name === 'integer') {\n          value = parseInt(text, 10);\n        } else if (name === 'bool' || name === 'boolean') {\n          value = text.toLowerCase() === 'true' || text === '1';\n        } else if (name === 'dateTime' || name === 'date') {\n          value = new Date(text);\n        } else {\n          // handle string or other types\n          if (typeof top.object !== 'string') {\n            value = text;\n          } else {\n            value = top.object + text;\n          }\n        }\n      }\n\n      if (top.object[self.options.attributesKey]) {\n        top.object[self.options.valueKey] = value;\n      } else {\n        top.object = value;\n      }\n    };\n\n    if (typeof callback === 'function') {\n      // we be streaming\n      var saxStream = sax.createStream(true, {});\n      saxStream.on('opentag', p.onopentag);\n      saxStream.on('closetag', p.onclosetag);\n      saxStream.on('cdata', p.oncdata);\n      saxStream.on('text', p.ontext);\n      xml.pipe(saxStream)\n        .on('error', function (err: any) {\n          callback(err);\n        })\n        .on('end', function () {\n          var r;\n          try {\n            r = finish();\n          } catch (e) {\n            return callback(e);\n          }\n          callback(null, r);\n        });\n      return;\n    }\n    p.write(xml).close();\n\n    return finish();\n\n    function finish() {\n      // MultiRef support: merge objects instead of replacing\n      for (var n in refs) {\n        var ref = refs[n];\n        for (var i = 0; i < ref.hrefs.length; i++) {\n          _.assign(ref.hrefs[i].obj, ref.obj);\n        }\n      }\n\n      if (root.Envelope) {\n        var body = root.Envelope.Body;\n        if (body && body.Fault) {\n          var code = body.Fault && body.Fault.faultcode && body.Fault.faultcode.$value ? body.Fault.faultcode.$value : body.Fault && body.Fault.faultcode;\n          // selectn('faultcode.$value', body.Fault) || selectn('faultcode', body.Fault);\n          var string = body.Fault && body.Fault.faultstring && body.Fault.faultstring.$value ? body.Fault.faultstring.$value : body.Fault && body.Fault.faultstring;\n          // selectn('faultstring.$value', body.Fault) || selectn('faultstring', body.Fault);\n          var detail = body.Fault && body.Fault.detail && body.Fault.detail.$value ? body.Fault.detail.$value : body.Fault && body.Fault.detail && body.Fault.detail.message;\n          // selectn('detail.$value', body.Fault) || selectn('detail.message', body.Fault);\n          var error: any = new Error(code + ': ' + string + (detail ? ': ' + detail : ''));\n          error.root = root;\n          throw error;\n        }\n        return root.Envelope;\n      }\n      return root;\n    }\n  }\n\n  private _processNextInclude(includes: any[]): Promise<any> {\n    return new Promise((resolve, reject) => {\n      resolve(this.definitions);\n\n      // var include = includes.shift();\n      // var options;\n      // if (!include) { resolve(this.definitions) }\n\n      // var includePath = resolveUrl(this.uri || '', include.location);\n\n      // options = _.assign({}, this.options);\n      // // follow supplied ignoredNamespaces option\n      // options.ignoredNamespaces = this._originalIgnoredNamespaces || this.options.ignoredNamespaces;\n\n      // return openWsdl(includePath, options)\n      //   .then(wsdl => {\n      //     this._includesWsdl.push(wsdl);\n\n      //     if (wsdl.definitions instanceof DefinitionsElement) {\n      //       _.merge(this.definitions, wsdl.definitions, function (a: any, b: any) {\n      //         return (a instanceof SchemaElement) ? a.merge(b) : undefined;\n      //       });\n      //     } else {\n      //       this.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace] = deepMerge(this.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace], wsdl.definitions);\n      //     }\n\n      //     return this._processNextInclude(includes);\n      //   })\n      //   .catch(err => reject(err));\n    });\n  }\n\n  private _initializeOptions(options: any) {\n    this._originalIgnoredNamespaces = (options || {}).ignoredNamespaces;\n    this.options = {};\n\n    var ignoredNamespaces = options ? options.ignoredNamespaces : null;\n\n    if (ignoredNamespaces &&\n      (Array.isArray(ignoredNamespaces.namespaces) || typeof ignoredNamespaces.namespaces === 'string')) {\n      if (ignoredNamespaces.override) {\n        this.options.ignoredNamespaces = ignoredNamespaces.namespaces;\n      } else {\n        this.options.ignoredNamespaces = this.ignoredNamespaces.concat(ignoredNamespaces.namespaces);\n      }\n    } else {\n      this.options.ignoredNamespaces = this.ignoredNamespaces;\n    }\n\n    this.options.valueKey = options.valueKey || this.valueKey;\n    this.options.xmlKey = options.xmlKey || this.xmlKey;\n    if (options.escapeXML !== undefined) {\n      this.options.escapeXML = options.escapeXML;\n    } else {\n      this.options.escapeXML = true;\n    }\n    // Allow any request headers to keep passing through\n    this.options.wsdl_headers = options.wsdl_headers;\n    this.options.wsdl_options = options.wsdl_options;\n    if (options.httpClient) {\n      this.options.httpClient = options.httpClient;\n    }\n\n    // // The supplied request-object should be passed through\n    // if (options.request) {\n    //   this.options.request = options.request;\n    // }\n\n    var ignoreBaseNameSpaces = options ? options.ignoreBaseNameSpaces : null;\n    if (ignoreBaseNameSpaces !== null && typeof ignoreBaseNameSpaces !== 'undefined') {\n      this.options.ignoreBaseNameSpaces = ignoreBaseNameSpaces;\n    } else {\n      this.options.ignoreBaseNameSpaces = this.ignoreBaseNameSpaces;\n    }\n\n    // Works only in client\n    this.options.forceSoap12Headers = options.forceSoap12Headers;\n    this.options.customDeserializer = options.customDeserializer;\n\n    if (options.overrideRootElement !== undefined) {\n      this.options.overrideRootElement = options.overrideRootElement;\n    }\n  }\n\n  private _fromXML(xml: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.definitions = this._parse(xml);\n      this.definitions.descriptions = {\n        types: {}\n      };\n\n      this.xml = xml;\n      resolve(this.definitions);\n    });\n  }\n\n  private _parse(xml: any): Element {\n    let self = this,\n      p = sax.parser(true, {}),\n      stack: any = [],\n      root: any = null,\n      types = null,\n      schema = null,\n      options = self.options;\n\n    p.onopentag = function (node) {\n      var nsName = node.name;\n      var attrs = node.attributes;\n\n      var top = stack[stack.length - 1];\n      var name;\n\n      if (top) {\n        try {\n          stack = top.startElement(stack, nsName, attrs, options);\n        } catch (e) {\n          if (self.options.strict) {\n            throw e;\n          } else {\n            stack.push(new Element(nsName, attrs, options));\n          }\n        }\n      } else {\n        name = splitQName(nsName).name;\n        if (name === 'definitions') {\n          root = new DefinitionsElement(nsName, attrs, options);\n          stack.push(root);\n        } else if (name === 'schema') {\n          // Shim a structure in here to allow the proper objects to be created when merging back.\n          root = new DefinitionsElement('definitions', {}, {});\n          types = new TypesElement('types', {}, {});\n          schema = new SchemaElement(nsName, attrs, options);\n          types.addChild(schema);\n          root.addChild(types);\n          stack.push(schema);\n        } else {\n          throw new Error('Unexpected root element of WSDL or include');\n        }\n      }\n    };\n\n    p.onclosetag = function (name) {\n      var top = stack[stack.length - 1];\n      // assert(top, 'Unmatched close tag: ' + name);\n      stack = top.endElement(stack, name);\n\n    };\n\n    p.write(xml).close();\n    return root;\n  }\n\n  private _xmlnsMap(): string {\n    var xmlns = this.definitions.xmlns;\n    var str = '';\n    for (var alias in xmlns) {\n      if (alias === '' || alias === TNS_PREFIX) {\n        continue;\n      }\n      var ns = xmlns[alias];\n      switch (ns) {\n        case \"http://xml.apache.org/xml-soap\": // apachesoap\n        case \"http://schemas.xmlsoap.org/wsdl/\": // wsdl\n        case \"http://schemas.xmlsoap.org/wsdl/soap/\": // wsdlsoap\n        case \"http://schemas.xmlsoap.org/wsdl/soap12/\": // wsdlsoap12\n        case \"http://schemas.xmlsoap.org/soap/encoding/\": // soapenc\n        case \"http://www.w3.org/2001/XMLSchema\": // xsd\n          continue;\n      }\n      if (~ns.indexOf('http://schemas.xmlsoap.org/')) {\n        continue;\n      }\n      if (~ns.indexOf('http://www.w3.org/')) {\n        continue;\n      }\n      if (~ns.indexOf('http://xml.apache.org/')) {\n        continue;\n      }\n      str += ' xmlns:' + alias + '=\"' + ns + '\"';\n    }\n    return str;\n  }\n}\n\nclass Element {\n  ignoredNamespaces: any;\n  xmlKey: any;\n  nsName: any;\n  prefix: any;\n  name: any;\n  children: any[] = [];\n  xmlns: any;\n  valueKey: any;\n  allowedChildren: any = {};\n  $targetNamespace: any;\n  $name: any;\n\n  $maxOccurs: any;\n  $minOccurs: any;\n  $ref: any;\n  $base: any;\n  $type: any;\n  schemas: any;\n  messages: any;\n  portTypes: any;\n  bindings: any;\n  services: any;\n  includes: any[] = [];\n  elements: any;\n  types: any;\n  complexTypes: any;\n  element: any;\n  parts: any;\n  soapAction: string;\n  style: string;\n  outputSoap: any;\n  inputSoap: any;\n  output: any;\n  input: any;\n  methods: any = {};\n  transport: string;\n  location: any;\n  ports: any = {};\n  encodingStyle: any;\n  use: any;\n\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    var parts = splitQName(nsName);\n\n    this.nsName = nsName;\n    this.prefix = parts.prefix;\n    this.name = parts.name;\n    this.children = [];\n    this.xmlns = {};\n\n    this._initializeOptions(options);\n\n    for (var key in attrs) {\n      var match = /^xmlns:?(.*)$/.exec(key);\n      if (match) {\n        this.xmlns[match[1] ? match[1] : TNS_PREFIX] = attrs[key];\n      }\n      else {\n        if (key === 'value') {\n          (this as any)[this.valueKey] = attrs[key];\n        } else {\n          (this as any)['$' + key] = attrs[key];\n        }\n      }\n    }\n    if (this.$targetNamespace !== undefined) {\n      // Add targetNamespace to the mapping\n      this.xmlns[TNS_PREFIX] = this.$targetNamespace;\n    }\n\n    // this.allowedChildren = mapElementTypes(splitQName(nsName).name);\n  }\n\n  private _initializeOptions(options: any) {\n    if (options) {\n      this.valueKey = options.valueKey || '$value';\n      this.xmlKey = options.xmlKey || '$xml';\n      this.ignoredNamespaces = options.ignoredNamespaces || [];\n    } else {\n      this.valueKey = '$value';\n      this.xmlKey = '$xml';\n      this.ignoredNamespaces = [];\n    }\n  };\n\n  deleteFixedAttrs() {\n    this.children && this.children.length === 0 && delete this.children;\n    this.xmlns && Object.keys(this.xmlns).length === 0 && delete this.xmlns;\n    delete this.nsName;\n    delete this.prefix;\n    delete this.name;\n  };\n\n  startElement(stack: any, nsName: any, attrs: any, options: any) {\n    // if (!this.allowedChildren) {\n    //   return;\n    // }\n\n    // let ChildClass = this.allowedChildren[splitQName(nsName).name];\n    // let element = null;\n    // if (ChildClass) {\n    //   stack.push(new ChildClass(nsName, attrs, options));\n    // }\n    // else {\n    //   this.unexpected(nsName);\n    // }\n\n    let ChildClass = ElementTypeMap[splitQName(nsName).name][0];\n    if (ChildClass) {\n      stack.push(new ChildClass(nsName, attrs, options))\n    };\n\n    return stack;\n  }\n\n  unexpected(name: any) {\n    throw new Error('Found unexpected element (' + name + ') inside ' + this.nsName);\n  }\n\n  endElement(stack: any, nsName: any) {\n    if (this.nsName === nsName) {\n      if (stack.length < 2)\n        return;\n      var parent: Element = stack[stack.length - 2];\n      if (this !== stack[0]) {\n        _.defaultsDeep(stack[0].xmlns, this.xmlns);\n        // delete this.xmlns;\n        parent.children.push(this);\n        parent.addChild(this);\n      }\n      stack.pop();\n    }\n\n    return stack;\n  }\n\n  addChild(child: any) { return }\n\n  description(definitions: any = {}, xmlns?: any): any {\n    return this.$name || this.name;\n  }\n\n  init() {\n\n  }\n}\n\nclass MessageElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n    this.init();\n  }\n\n  init() {\n    this.element = null;\n    this.parts = null;\n  }\n\n  description(definitions: any = {}, xmlns?: any): any {\n    if (this.element) {\n      return this.element && this.element.description(definitions);\n    }\n    var desc: any = {};\n    desc[this.$name] = this.parts;\n    return desc;\n  }\n\n  postProcess(definitions: any) {\n    var part = null;\n    var child;\n    var children = this.children || [];\n    var ns;\n    var nsName;\n    var i;\n    var type;\n\n    for (i in children) {\n      if ((child = children[i]).name === 'part') {\n        part = child;\n        break;\n      }\n    }\n\n    if (!part) {\n      return;\n    }\n\n    if (part.$element) {\n      var lookupTypes = [],\n        elementChildren;\n\n      delete this.parts;\n\n      nsName = splitQName(part.$element);\n      ns = nsName.prefix;\n      var schema = definitions.schemas[definitions.xmlns[ns]];\n      this.element = schema.elements[nsName.name];\n      if (!this.element) { return; }\n      this.element.targetNSAlias = ns;\n      this.element.targetNamespace = definitions.xmlns[ns];\n\n      // set the optional $lookupType to be used within `client#_invoke()` when\n      // calling `wsdl#objectToDocumentXML()\n      this.element.$lookupType = part.$element;\n\n      elementChildren = this.element.children;\n\n      // get all nested lookup types (only complex types are followed)\n      if (elementChildren.length > 0) {\n        for (i = 0; i < elementChildren.length; i++) {\n          lookupTypes.push(this._getNestedLookupTypeString(elementChildren[i]));\n        }\n      }\n\n      // if nested lookup types where found, prepare them for furter usage\n      if (lookupTypes.length > 0) {\n        lookupTypes = lookupTypes.\n          join('_').\n          split('_').\n          filter(function removeEmptyLookupTypes(type) {\n            return type !== '^';\n          });\n\n        var schemaXmlns = definitions.schemas[this.element.targetNamespace].xmlns;\n\n        for (i = 0; i < lookupTypes.length; i++) {\n          lookupTypes[i] = this._createLookupTypeObject(lookupTypes[i], schemaXmlns);\n        }\n      }\n\n      this.element.$lookupTypes = lookupTypes;\n\n      if (this.element.$type) {\n        type = splitQName(this.element.$type);\n        var typeNs = schema.xmlns && schema.xmlns[type.prefix] || definitions.xmlns[type.prefix];\n\n        if (typeNs) {\n          if (type.name in Primitives) {\n            // this.element = this.element.$type;\n          }\n          else {\n            // first check local mapping of ns alias to namespace\n            schema = definitions.schemas[typeNs];\n            var ctype = schema.complexTypes[type.name] || schema.types[type.name] || schema.elements[type.name];\n\n\n            if (ctype) {\n              this.parts = ctype.description(definitions, schema.xmlns);\n            }\n          }\n        }\n      }\n      else {\n        var method = this.element.description(definitions, schema.xmlns);\n        this.parts = method[nsName.name];\n      }\n\n\n      this.children.splice(0, 1);\n    } else {\n      // rpc encoding\n      this.parts = {};\n      delete this.element;\n      for (i = 0; part = this.children[i]; i++) {\n        if (part.name === 'documentation') {\n          // <wsdl:documentation can be present under <wsdl:message>\n          continue;\n        }\n        //assert(part.name === 'part', 'Expected part element');\n        nsName = splitQName(part.$type);\n        ns = definitions.xmlns[nsName.prefix];\n        type = nsName.name;\n        var schemaDefinition = definitions.schemas[ns];\n        if (typeof schemaDefinition !== 'undefined') {\n          this.parts[part.$name] = definitions.schemas[ns].types[type] || definitions.schemas[ns].complexTypes[type];\n        } else {\n          this.parts[part.$name] = part.$type;\n        }\n\n        if (typeof this.parts[part.$name] === 'object') {\n          this.parts[part.$name].prefix = nsName.prefix;\n          this.parts[part.$name].xmlns = ns;\n        }\n\n        this.children.splice(i--, 1);\n      }\n    }\n    this.deleteFixedAttrs();\n  }\n\n  private _createLookupTypeObject(nsString: any, xmlns: any) {\n    var splittedNSString = splitQName(nsString),\n      nsAlias = splittedNSString.prefix,\n      splittedName = splittedNSString.name.split('#'),\n      type = splittedName[0],\n      name = splittedName[1],\n      lookupTypeObj: any = {};\n\n    lookupTypeObj.$namespace = xmlns[nsAlias];\n    lookupTypeObj.$type = nsAlias + ':' + type;\n    lookupTypeObj.$name = name;\n\n    return lookupTypeObj;\n  }\n\n  private _getNestedLookupTypeString(element: any) {\n    var resolvedType = '^',\n      excluded = this.ignoredNamespaces.concat('xs'); // do not process $type values wich start with\n\n    if (element.hasOwnProperty('$type') && typeof element.$type === 'string') {\n      if (excluded.indexOf(element.$type.split(':')[0]) === -1) {\n        resolvedType += ('_' + element.$type + '#' + element.$name);\n      }\n    }\n\n    if (element.children.length > 0) {\n      element.children.forEach((child: any) => {\n        var resolvedChildType = this._getNestedLookupTypeString(child).replace(/\\^_/, '');\n\n        if (resolvedChildType && typeof resolvedChildType === 'string') {\n          resolvedType += ('_' + resolvedChildType);\n        }\n      });\n    }\n\n    return resolvedType;\n  }\n}\n\nclass SchemaElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n    this.init();\n  }\n\n  init() {\n    this.complexTypes = {};\n    this.types = {};\n    this.elements = {};\n    this.includes = [];\n  }\n\n  merge(source: any): SchemaElement {\n    //assert(source instanceof SchemaElement);\n    if (this.$targetNamespace === source.$targetNamespace) {\n      _.merge(this.complexTypes, source.complexTypes);\n      _.merge(this.types, source.types);\n      _.merge(this.elements, source.elements);\n      _.merge(this.xmlns, source.xmlns);\n    }\n\n    return this;\n  }\n\n  addChild(child: any) {\n    if (child.$name in Primitives) return;\n    if (child.name === 'include' || child.name === 'import') {\n      var location = child.$schemaLocation || child.$location;\n      if (location) {\n        this.includes.push({\n          namespace: child.$namespace || child.$targetNamespace || this.$targetNamespace,\n          location: location\n        });\n      }\n    }\n    else if (child.name === 'complexType') {\n      this.complexTypes[child.$name] = child;\n    }\n    else if (child.name === 'element') {\n      this.elements[child.$name] = child;\n    }\n    else if (child.$name) {\n      this.types[child.$name] = child;\n    }\n    this.children.pop();\n  }\n}\n\nclass TypesElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  init() {\n    this.schemas = {};\n  }\n\n  addChild(child: any) {\n    //assert(child instanceof SchemaElement);\n\n    var targetNamespace = child.$targetNamespace;\n\n    if (!this.schemas.hasOwnProperty(targetNamespace)) {\n      this.schemas[targetNamespace] = child;\n    } else {\n      console.error('Target-Namespace \"' + targetNamespace + '\" already in use by another Schema!');\n    }\n  }\n}\n\nclass ElementElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n    this.init();\n  }\n\n  description(definitions: any = {}, xmlns?: any): any {\n    var element: any = {},\n      name = this.$name;\n    var isMany = !this.$maxOccurs ? false : (isNaN(this.$maxOccurs) ? (this.$maxOccurs === 'unbounded') : (this.$maxOccurs > 1));\n    if (this.$minOccurs !== this.$maxOccurs && isMany) {\n      name += '[]';\n    }\n\n    if (xmlns && xmlns[TNS_PREFIX]) {\n      this.$targetNamespace = xmlns[TNS_PREFIX];\n    }\n    var type = this.$type || this.$ref;\n    if (type) {\n      type = splitQName(type);\n      var typeName = type.name,\n        ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix],\n        schema = definitions.schemas[ns],\n        typeElement = schema && (this.$type ? schema.complexTypes[typeName] || schema.types[typeName] : schema.elements[typeName]);\n\n      if (ns && definitions.schemas[ns]) {\n        xmlns = definitions.schemas[ns].xmlns;\n      }\n\n      if (typeElement && !(typeName in Primitives)) {\n\n        if (!(typeName in definitions.descriptions.types)) {\n\n          var elem: any = {};\n          definitions.descriptions.types[typeName] = elem;\n          var description = typeElement.description(definitions, xmlns);\n          if (typeof description === 'string') {\n            elem = description;\n          }\n          else {\n            Object.keys(description).forEach(function (key) {\n              elem[key] = description[key];\n            });\n          }\n\n          if (this.$ref) {\n            element = elem;\n          }\n          else {\n            element[name] = elem;\n          }\n\n          if (typeof elem === 'object') {\n            elem.targetNSAlias = type.prefix;\n            elem.targetNamespace = ns;\n          }\n\n          definitions.descriptions.types[typeName] = elem;\n        }\n        else {\n          if (this.$ref) {\n            element = definitions.descriptions.types[typeName];\n          }\n          else {\n            element[name] = definitions.descriptions.types[typeName];\n          }\n        }\n\n      }\n      else {\n        element[name] = this.$type;\n      }\n    }\n    else {\n      var children = this.children;\n      element[name] = {};\n      for (var i = 0, child; child = children[i]; i++) {\n        if (child instanceof ComplexTypeElement) {\n          element[name] = child.description(definitions, xmlns);\n        }\n      }\n    }\n    return element;\n  }\n}\n\nclass AnyElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  description(definitions: any = {}, xmlns?: any): any {\n    var children = this.children;\n    var sequence: any = {};\n    for (var i = 0, child; child = children[i]; i++) {\n      if (child instanceof AnyElement) {\n        continue;\n      }\n      var description = child.description(definitions, xmlns);\n      for (var key in description) {\n        sequence[key] = description[key];\n      }\n    }\n    return sequence;\n  }\n}\n\nclass InputElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  addChild(child: any) {\n    if (child.name === 'body') {\n      this.use = child.$use;\n      if (this.use === 'encoded') {\n        this.encodingStyle = child.$encodingStyle;\n      }\n      this.children.pop();\n    }\n  }\n}\n\nclass OutputElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  addChild(child: any) {\n    if (child.name === 'body') {\n      this.use = child.$use;\n      if (this.use === 'encoded') {\n        this.encodingStyle = child.$encodingStyle;\n      }\n      this.children.pop();\n    }\n  }\n}\n\nclass SimpleTypeElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  description(definitions: any = {}, xmlns?: any): any {\n    var children = this.children;\n    for (var i = 0, child; child = children[i]; i++) {\n      if (child instanceof RestrictionElement)\n        return this.$name + \"|\" + child.description();\n    }\n    return {};\n  }\n}\n\nclass RestrictionElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  description(definitions: any = {}, xmlns?: any): any {\n    var children = this.children;\n    var desc;\n    for (var i = 0, child; child = children[i]; i++) {\n      if (child instanceof SequenceElement ||\n        child instanceof ChoiceElement) {\n        desc = child.description(definitions, xmlns);\n        break;\n      }\n    }\n    if (desc && this.$base) {\n      var type = splitQName(this.$base),\n        typeName = type.name,\n        ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix],\n        schema = definitions.schemas[ns],\n        typeElement = schema && (schema.complexTypes[typeName] || schema.types[typeName] || schema.elements[typeName]);\n\n      desc.getBase = function () {\n        return typeElement.description(definitions, schema.xmlns);\n      };\n      return desc;\n    }\n\n    // then simple element\n    var base = this.$base ? this.$base + \"|\" : \"\";\n    return base + this.children.map(function (child) {\n      return child.description();\n    }).join(\",\");\n  }\n}\n\nclass ExtensionElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  description(definitions: any = {}, xmlns?: any) {\n    var children = this.children;\n    var desc = {};\n    for (var i = 0, child; child = children[i]; i++) {\n      if (child instanceof SequenceElement ||\n        child instanceof ChoiceElement) {\n        desc = child.description(definitions, xmlns);\n      }\n    }\n    if (this.$base) {\n      var type = splitQName(this.$base),\n        typeName = type.name,\n        ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix],\n        schema = definitions.schemas[ns];\n\n      if (typeName in Primitives) {\n        return this.$base;\n      }\n      else {\n        var typeElement = schema && (schema.complexTypes[typeName] ||\n          schema.types[typeName] || schema.elements[typeName]);\n\n        if (typeElement) {\n          var base = typeElement.description(definitions, schema.xmlns);\n          desc = _.defaultsDeep(base, desc);\n        }\n      }\n    }\n    return desc;\n  }\n}\n\nclass ChoiceElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  description(definitions: any = {}, xmlns?: any) {\n    var children = this.children;\n    var choice: any = {};\n    for (var i = 0, child; child = children[i]; i++) {\n      var description = child.description(definitions, xmlns);\n      for (var key in description) {\n        choice[key] = description[key];\n      }\n    }\n    return choice;\n  }\n}\n\nclass EnumerationElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  description(definitions: any = {}, xmlns?: any): any {\n    return (this as any)[this.valueKey];\n  }\n}\n\nclass ComplexTypeElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  description(definitions: any = {}, xmlns?: any): any {\n    var children = this.children || [];\n    for (var i = 0, child; child = children[i]; i++) {\n      if (child instanceof ChoiceElement ||\n        child instanceof SequenceElement ||\n        child instanceof AllElement ||\n        child instanceof SimpleContentElement ||\n        child instanceof ComplexContentElement) {\n\n        return child.description(definitions, xmlns);\n      }\n    }\n    return {};\n  }\n}\n\nclass ComplexContentElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  description(definitions: any = {}, xmlns?: any): any {\n    var children = this.children;\n    for (var i = 0, child; child = children[i]; i++) {\n      if (child instanceof ExtensionElement) {\n        return child.description(definitions, xmlns);\n      }\n    }\n    return {};\n  }\n}\n\nclass SimpleContentElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  description(definitions: any = {}, xmlns?: any): any {\n    var children = this.children;\n    for (var i = 0, child; child = children[i]; i++) {\n      if (child instanceof ExtensionElement) {\n        return child.description(definitions, xmlns);\n      }\n    }\n    return {};\n  }\n}\n\nclass SequenceElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  description(definitions: any = {}, xmlns?: any): any {\n    var children = this.children;\n    var sequence: any = {};\n    for (var i = 0, child; child = children[i]; i++) {\n      if (child instanceof AnyElement) {\n        continue;\n      }\n      var description = child.description(definitions, xmlns);\n      for (var key in description) {\n        sequence[key] = description[key];\n      }\n    }\n    return sequence;\n  }\n}\n\nclass AllElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  description(definitions: any = {}, xmlns?: any): any {\n    var children = this.children;\n    var sequence: any = {};\n    for (var i = 0, child; child = children[i]; i++) {\n      if (child instanceof AnyElement) {\n        continue;\n      }\n      var description = child.description(definitions, xmlns);\n      for (var key in description) {\n        sequence[key] = description[key];\n      }\n    }\n    return sequence;\n  }\n}\n\nclass OperationElement extends Element {\n\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  init() {\n    this.input = null;\n    this.output = null;\n    this.inputSoap = null;\n    this.outputSoap = null;\n    this.style = '';\n    this.soapAction = '';\n  }\n\n  addChild(child: any) {\n    if (child.name === 'operation') {\n      this.soapAction = child.$soapAction || '';\n      this.style = child.$style || '';\n      this.children.pop();\n    }\n  }\n\n  postProcess(definitions: any, tag: any) {\n    var children = this.children;\n    for (var i = 0, child; child = children[i]; i++) {\n      if (child.name !== 'input' && child.name !== 'output')\n        continue;\n      if (tag === 'binding') {\n        (this as any)[child.name] = child;\n        children.splice(i--, 1);\n        continue;\n      }\n      var messageName = splitQName(child.$message).name;\n      var message = definitions.messages[messageName];\n      message.postProcess(definitions);\n      if (message.element) {\n        definitions.messages[message.element.$name] = message;\n        (this as any)[child.name] = message.element;\n      }\n      else {\n        (this as any)[child.name] = message;\n      }\n      children.splice(i--, 1);\n    }\n    this.deleteFixedAttrs();\n  }\n\n  description(definitions: any = {}, xmlns?: any): any {\n    var inputDesc = this.input ? this.input.description(definitions) : null;\n    var outputDesc = this.output ? this.output.description(definitions) : null;\n    return {\n      input: inputDesc && inputDesc[Object.keys(inputDesc)[0]],\n      output: outputDesc && outputDesc[Object.keys(outputDesc)[0]]\n    }\n  }\n}\n\nclass PortTypeElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  init() {\n    this.methods = {};\n  }\n\n  postProcess(definitions: any) {\n    var children = this.children;\n    if (typeof children === 'undefined')\n      return;\n    for (var i = 0, child; child = children[i]; i++) {\n      if (child.name !== 'operation')\n        continue;\n      child.postProcess(definitions, 'portType');\n      this.methods[child.$name] = child;\n      children.splice(i--, 1);\n    }\n    delete this.$name;\n    this.deleteFixedAttrs();\n  }\n\n  description(definitions: any = {}, xmlns?: any): any {\n    var methods: any = {};\n    for (var name in this.methods) {\n      var method = this.methods[name];\n      methods[name] = method.description(definitions);\n    }\n    return methods;\n  }\n\n}\n\nclass BindingElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  init() {\n    this.transport = '';\n    this.style = '';\n    this.methods = {};\n  }\n\n  addChild(child: any) {\n    if (child.name === 'binding') {\n      this.transport = child.$transport;\n      this.style = child.$style;\n      this.children.pop();\n    }\n  }\n\n  postProcess(definitions: any) {\n    var type = splitQName(this.$type).name,\n      portType = definitions.portTypes[type],\n      style = this.style,\n      children = this.children;\n    if (portType) {\n      portType.postProcess(definitions);\n      this.methods = portType.methods;\n\n      for (var i = 0, child; child = children[i]; i++) {\n        if (child.name !== 'operation')\n          continue;\n        child.postProcess(definitions, 'binding');\n        children.splice(i--, 1);\n        child.style || (child.style = style);\n        var method = this.methods[child.$name];\n\n        if (method) {\n          method.style = child.style;\n          method.soapAction = child.soapAction;\n          method.inputSoap = child.input || null;\n          method.outputSoap = child.output || null;\n          method.inputSoap && method.inputSoap.deleteFixedAttrs();\n          method.outputSoap && method.outputSoap.deleteFixedAttrs();\n        }\n      }\n    }\n    delete this.$name;\n    delete this.$type;\n    this.deleteFixedAttrs();\n  }\n\n  description(definitions: any = {}, xmlns?: any): any {\n    var methods: any = {};\n    for (var name in this.methods) {\n      var method = this.methods[name];\n      methods[name] = method.description(definitions);\n    }\n    return methods;\n  }\n}\n\nclass PortElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  init() {\n    this.location = null;\n  }\n\n  addChild(child: any) {\n    if (child.name === 'address' && typeof (child.$location) !== 'undefined') {\n      this.location = child.$location;\n    }\n  }\n}\n\nclass ServiceElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  init() {\n    this.ports = {};\n  }\n\n  postProcess(definitions: any) {\n    var children = this.children,\n      bindings = definitions.bindings;\n    if (children && children.length > 0) {\n      for (var i = 0, child; child = children[i]; i++) {\n        if (child.name !== 'port')\n          continue;\n        var bindingName = splitQName(child.$binding).name;\n        var binding = bindings[bindingName];\n        if (binding) {\n          binding.postProcess(definitions);\n          this.ports[child.$name] = {\n            location: child.location,\n            binding: binding\n          };\n          children.splice(i--, 1);\n        }\n      }\n    }\n    delete this.$name;\n    this.deleteFixedAttrs();\n  }\n\n  description(definitions: any = {}, xmlns?: any): any {\n    var ports: any = {};\n    for (var name in this.ports) {\n      var port = this.ports[name];\n      ports[name] = port.binding.description(definitions);\n    }\n    return ports;\n  }\n}\n\nclass DefinitionsElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n\n  init() {\n    if (this.name !== 'definitions') this.unexpected(this.nsName);\n    this.messages = {};\n    this.portTypes = {};\n    this.bindings = {};\n    this.services = {};\n    this.schemas = {};\n  }\n\n  addChild(child: any) {\n    if (child instanceof TypesElement) {\n      // Merge types.schemas into definitions.schemas\n      _.merge(this.schemas, child.schemas);\n    }\n    else if (child instanceof MessageElement) {\n      this.messages[child.$name] = child;\n    }\n    else if (child.name === 'import') {\n      this.schemas[child.$namespace] = new SchemaElement(child.$namespace, {});\n      this.schemas[child.$namespace].addChild(child);\n    }\n    else if (child instanceof PortTypeElement) {\n      this.portTypes[child.$name] = child;\n    }\n    else if (child instanceof BindingElement) {\n      if (child.transport === 'http://schemas.xmlsoap.org/soap/http' ||\n        child.transport === 'http://www.w3.org/2003/05/soap/bindings/HTTP/')\n        this.bindings[child.$name] = child;\n    }\n    else if (child instanceof ServiceElement) {\n      this.services[child.$name] = child;\n    }\n    else if (child instanceof DocumentationElement) {\n    }\n    this.children.pop();\n  }\n}\n\nclass DocumentationElement extends Element {\n  constructor(nsName: any, attrs: any = {}, options: any = {}) {\n    super(nsName, attrs, options);\n\n    this.init();\n  }\n}\n\nconst ElementTypeMap: any = {\n  types: [TypesElement, 'schema documentation'],\n  schema: [SchemaElement, 'element complexType simpleType include import'],\n  element: [ElementElement, 'annotation complexType'],\n  any: [AnyElement, ''],\n  simpleType: [SimpleTypeElement, 'restriction'],\n  restriction: [RestrictionElement, 'enumeration all choice sequence'],\n  extension: [ExtensionElement, 'all sequence choice'],\n  choice: [ChoiceElement, 'element sequence choice any'],\n  // group: [GroupElement, 'element group'],\n  enumeration: [EnumerationElement, ''],\n  complexType: [ComplexTypeElement, 'annotation sequence all complexContent simpleContent choice'],\n  complexContent: [ComplexContentElement, 'extension'],\n  simpleContent: [SimpleContentElement, 'extension'],\n  sequence: [SequenceElement, 'element sequence choice any'],\n  all: [AllElement, 'element choice'],\n\n  service: [ServiceElement, 'port documentation'],\n  port: [PortElement, 'address documentation'],\n  binding: [BindingElement, '_binding SecuritySpec operation documentation'],\n  portType: [PortTypeElement, 'operation documentation'],\n  message: [MessageElement, 'part documentation'],\n  operation: [OperationElement, 'documentation input output fault _operation'],\n  input: [InputElement, 'body SecuritySpecRef documentation header'],\n  output: [OutputElement, 'body SecuritySpecRef documentation header'],\n  fault: [Element, '_fault documentation'],\n  definitions: [DefinitionsElement, 'types message portType binding service import documentation'],\n  documentation: [DocumentationElement, '']\n}"]}